# DJ Universe - Production ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: dj-universe-config
  namespace: dj-universe-prod
  labels:
    app.kubernetes.io/name: dj-universe
    app.kubernetes.io/component: config
data:
  # Database Configuration
  POSTGRES_DB: "dj_universe"
  POSTGRES_USER: "dj_user"
  MONGODB_DB: "dj_universe"
  REDIS_DB: "0"
  
  # Service URLs
  API_URL: "http://dj-universe-api:8000"
  WEBSOCKET_URL: "ws://dj-universe-websocket:8001"
  AI_SERVICE_URL: "http://dj-universe-ai:8002"
  
  # Application Configuration
  NODE_ENV: "production"
  PYTHONUNBUFFERED: "1"
  
  # Audio Processing
  AUDIO_UPLOAD_PATH: "/app/uploads/audio"
  AUDIO_CACHE_PATH: "/app/cache/audio"
  MODEL_CACHE_PATH: "/app/models"
  AUDIO_PROCESSING_WORKERS: "4"
  
  # Performance Settings
  WEB_CONCURRENCY: "4"
  MAX_CONNECTIONS: "1000"
  
  # Monitoring
  ENABLE_METRICS: "true"
  METRICS_PORT: "9090"
  
  # CDN Configuration
  CDN_URL: "https://cdn.djuniverse.app"
  STATIC_URL: "https://static.djuniverse.app"
  
  # Feature Flags
  ENABLE_AI_JUDGE: "true"
  ENABLE_REAL_TIME_ANALYSIS: "true"
  ENABLE_NDI_STREAMING: "true"
  ENABLE_BATTLE_RECORDING: "true"
  
  # Rate Limiting
  API_RATE_LIMIT: "100"
  WEBSOCKET_RATE_LIMIT: "1000"
  UPLOAD_RATE_LIMIT: "10"
  
  # Audio Quality Settings
  AUDIO_SAMPLE_RATE: "44100"
  AUDIO_BITRATE: "320"
  AUDIO_FORMAT: "mp3"
  MAX_TRACK_SIZE: "50MB"
  
  # Battle Configuration
  MAX_BATTLE_PARTICIPANTS: "8"
  BATTLE_ROUND_DURATION: "180"
  BATTLE_PREP_TIME: "30"
  
  # Social Network
  MAX_POST_LENGTH: "500"
  MAX_FOLLOWERS: "10000"
  MAX_CREW_MEMBERS: "20"
  
---
# Nginx Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: dj-universe-prod
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: config
data:
  nginx.conf: |
    worker_processes auto;
    worker_rlimit_nofile 65535;
    
    events {
        worker_connections 65535;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';
        
        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;
        
        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        client_max_body_size 100M;
        server_tokens off;
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript application/json application/javascript;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=upload:10m rate=1r/s;
        
        # Upstream definitions
        upstream web_backend {
            least_conn;
            server dj-universe-web:3000;
            keepalive 32;
        }
        
        upstream api_backend {
            least_conn;
            server dj-universe-api:8000;
            keepalive 32;
        }
        
        upstream websocket_backend {
            least_conn;
            server dj-universe-websocket:8001;
            keepalive 32;
        }
        
        upstream ai_backend {
            least_conn;
            server dj-universe-ai:8002;
            keepalive 32;
        }
        
        # Main server
        server {
            listen 80;
            server_name _;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # Health check
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # WebSocket
            location /socket.io/ {
                proxy_pass http://websocket_backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 86400;
            }
            
            # API
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://api_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # AI Services
            location /ai/ {
                limit_req zone=api burst=10 nodelay;
                proxy_pass http://ai_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_read_timeout 300s;
            }
            
            # Static files
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://web_backend;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # Main app
            location / {
                proxy_pass http://web_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }