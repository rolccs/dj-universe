{
  "name": "dj-universe",
  "version": "1.0.0",
  "description": "ðŸŽµ DJ Universe - Global Social Network + DJ Battle Platform with AI Judge",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:web\" \"npm run dev:api\"",
    "dev:external": "./launch-dev.sh",
    "dev:external-simple": "./launch-dev-simple.sh",
    "dev:web": "npm run dev --workspace=packages/web",
    "dev:api": "npm run dev --workspace=packages/api",
    "dev:websocket": "npm run dev --workspace=packages/websocket",
    "dev:ai": "npm run dev --workspace=packages/ai-services",
    "build": "npm run build:shared && npm run build:audio-engine && npm run build:all",
    "build:shared": "npm run build --workspace=packages/shared",
    "build:audio-engine": "npm run build --workspace=packages/audio-engine",
    "build:all": "npm run build --workspace=packages/web && npm run build --workspace=packages/api && npm run build --workspace=packages/websocket",
    "build:docker": "npm run build:docker:web && npm run build:docker:api && npm run build:docker:websocket && npm run build:docker:ai",
    "build:docker:web": "docker build -f infrastructure/docker/web.Dockerfile -t ghcr.io/rolccs/dj-universe-web:latest .",
    "build:docker:api": "docker build -f infrastructure/docker/api.Dockerfile -t ghcr.io/rolccs/dj-universe-api:latest .",
    "build:docker:websocket": "docker build -f infrastructure/docker/websocket.Dockerfile -t ghcr.io/rolccs/dj-universe-websocket:latest .",
    "build:docker:ai": "docker build -f infrastructure/docker/ai-services.Dockerfile -t ghcr.io/rolccs/dj-universe-ai:latest .",
    "test": "jest --config tests/jest.config.js",
    "test:watch": "jest --config tests/jest.config.js --watch",
    "test:coverage": "jest --config tests/jest.config.js --coverage",
    "test:ci": "jest --config tests/jest.config.js --ci --coverage --watchAll=false",
    "test:web": "jest --config tests/jest.config.js --selectProjects web",
    "test:api": "jest --config tests/jest.config.js --selectProjects api",
    "test:audio": "jest --config tests/jest.config.js --selectProjects audio-engine",
    "test:shared": "jest --config tests/jest.config.js --selectProjects shared",
    "lint": "npm run lint --workspaces",
    "lint:fix": "npm run lint:fix --workspaces",
    "type-check": "npm run type-check --workspaces",
    "format": "prettier --write \"**/*.{js,ts,tsx,json,md,yml,yaml}\"",
    "format:check": "prettier --check \"**/*.{js,ts,tsx,json,md,yml,yaml}\"",
    "clean": "npm run clean --workspaces && rimraf dist build coverage test-results node_modules/.cache",
    "clean:deps": "rimraf node_modules package-lock.json && npm run clean:deps --workspaces",
    "install:all": "npm install && npm install --workspaces",
    "update:deps": "npm update && npm update --workspaces",
    "audit": "npm audit && npm audit --workspaces",
    "audit:fix": "npm audit fix && npm audit fix --workspaces",
    "security:scan": "npm run audit && npm run security:scan --workspaces",
    "deploy:dev": "./infrastructure/scripts/dev-setup.sh",
    "deploy:staging": "./infrastructure/scripts/deploy-staging.sh",
    "deploy:production": "./infrastructure/scripts/deploy-production.sh",
    "rollback": "./infrastructure/scripts/rollback.sh",
    "infrastructure:init": "cd infrastructure/terraform && terraform init",
    "infrastructure:plan": "cd infrastructure/terraform && terraform plan",
    "infrastructure:apply": "cd infrastructure/terraform && terraform apply",
    "infrastructure:destroy": "cd infrastructure/terraform && terraform destroy",
    "docker:up": "cd infrastructure/docker && docker-compose up -d",
    "docker:down": "cd infrastructure/docker && docker-compose down",
    "docker:logs": "cd infrastructure/docker && docker-compose logs -f",
    "k8s:apply": "kubectl apply -f infrastructure/k8s/production/",
    "k8s:delete": "kubectl delete -f infrastructure/k8s/production/",
    "monitoring:setup": "kubectl apply -f infrastructure/k8s/monitoring/",
    "precommit": "npm run lint && npm run type-check && npm run test:ci",
    "prepare": "husky install || true",
    "postinstall": "npm run build:shared || true"
  },
  "keywords": [
    "dj",
    "music",
    "battle",
    "ai",
    "social-network",
    "audio",
    "real-time",
    "typescript",
    "react",
    "node.js",
    "tensorflow"
  ],
  "author": {
    "name": "HECTOR NOLIVOS",
    "email": "hector@nolivos.cloud",
    "url": "https://github.com/rolccs"
  },
  "contributors": [
    {
      "name": "HECTOR NOLIVOS",
      "email": "hector@djuniverse.app",
      "url": "https://github.com/rolccs"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/rolccs/dj-universe.git"
  },
  "bugs": {
    "url": "https://github.com/rolccs/dj-universe/issues"
  },
  "homepage": "https://djuniverse.app",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.23.0",
    "@babel/preset-env": "^7.23.0",
    "@babel/preset-react": "^7.22.0",
    "@babel/preset-typescript": "^7.23.0",
    "@testing-library/jest-dom": "^6.1.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.5.0",
    "@types/jest": "^29.5.0",
    "@types/node": "^20.8.0",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "babel-jest": "^29.7.0",
    "concurrently": "^8.2.0",
    "cross-env": "^7.0.3",
    "eslint": "^8.52.0",
    "eslint-config-next": "^14.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-react": "^7.33.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "husky": "^8.0.3",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-html-reporters": "^3.1.5",
    "jest-junit": "^16.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "lint-staged": "^15.0.0",
    "mongodb-memory-server": "^9.0.0",
    "msw": "^1.3.0",
    "prettier": "^3.0.0",
    "rimraf": "^5.0.0",
    "ts-jest": "^29.1.0",
    "typescript": "^5.2.0"
  },
  "dependencies": {
    "ioredis-mock": "^8.9.0"
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false,
    "endOfLine": "lf"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}