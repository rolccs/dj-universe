{
  "analysis_timestamp": "2025-06-24T06:35:48.094007",
  "source_files": {
    "header_files": [
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h"
    ],
    "cpp_files": [
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.cpp"
    ],
    "ksy_files": [
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy"
    ],
    "total_lines": 6637,
    "file_analysis": {
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h": {
        "file_name": "rekordbox_pdb.h",
        "file_type": ".h",
        "line_count": 1874,
        "size_bytes": 52879,
        "data_structures": [
          {
            "type": "class",
            "name": "rekordbox_pdb_t",
            "members": [
              {
                "type": "class",
                "name": "device_sql_string_t"
              },
              {
                "type": "class",
                "name": "history_playlist_row_t"
              },
              {
                "type": "class",
                "name": "playlist_tree_row_t"
              },
              {
                "type": "class",
                "name": "color_row_t"
              },
              {
                "type": "class",
                "name": "device_sql_short_ascii_t"
              },
              {
                "type": "class",
                "name": "album_row_t"
              },
              {
                "type": "class",
                "name": "page_t"
              },
              {
                "type": "class",
                "name": "row_group_t"
              },
              {
                "type": "class",
                "name": "genre_row_t"
              },
              {
                "type": "class",
                "name": "history_entry_row_t"
              },
              {
                "type": "class",
                "name": "artwork_row_t"
              },
              {
                "type": "class",
                "name": "device_sql_long_ascii_t"
              },
              {
                "type": "class",
                "name": "artist_row_t"
              },
              {
                "type": "class",
                "name": "page_ref_t"
              },
              {
                "type": "class",
                "name": "track_row_t"
              },
              {
                "type": "class",
                "name": "key_row_t"
              },
              {
                "type": "class",
                "name": "playlist_entry_row_t"
              },
              {
                "type": "class",
                "name": "label_row_t"
              },
              {
                "type": "class",
                "name": "device_sql_long_utf16le_t"
              },
              {
                "type": "class",
                "name": "table_t"
              },
              {
                "type": "class",
                "name": "row_ref_t"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "device_sql_string_t",
            "members": [
              {
                "type": "kstruct*",
                "name": "p__parent"
              },
              {
                "type": "uint8_t",
                "name": "m_length_and_kind"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "kstruct*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_length_and_kind"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "history_playlist_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_id"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "playlist_tree_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_is_folder"
              },
              {
                "type": "bool",
                "name": "m_is_folder"
              },
              {
                "type": "uint32_t",
                "name": "m_parent_id"
              },
              {
                "type": "string",
                "name": "m__unnamed1"
              },
              {
                "type": "uint32_t",
                "name": "m_sort_order"
              },
              {
                "type": "uint32_t",
                "name": "m_id"
              },
              {
                "type": "uint32_t",
                "name": "m_raw_is_folder"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_parent_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "color_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "string",
                "name": "m__unnamed0"
              },
              {
                "type": "uint16_t",
                "name": "m_id"
              },
              {
                "type": "uint8_t",
                "name": "m__unnamed2"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m__unnamed0"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "device_sql_short_ascii_t",
            "members": [
              {
                "type": "device_sql_string_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_length"
              },
              {
                "type": "int32_t",
                "name": "m_length"
              },
              {
                "type": "string",
                "name": "m_text"
              },
              {
                "type": "uint8_t",
                "name": "m_length_and_kind"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "device_sql_string_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_text"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "album_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_name"
              },
              {
                "type": "uint16_t",
                "name": "m__unnamed0"
              },
              {
                "type": "uint16_t",
                "name": "m_index_shift"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed2"
              },
              {
                "type": "uint32_t",
                "name": "m_artist_id"
              },
              {
                "type": "uint32_t",
                "name": "m_id"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed5"
              },
              {
                "type": "uint8_t",
                "name": "m__unnamed6"
              },
              {
                "type": "uint8_t",
                "name": "m_ofs_name"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m__unnamed0"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "page_t",
            "members": [
              {
                "type": "page_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_num_rows"
              },
              {
                "type": "uint16_t",
                "name": "m_num_rows"
              },
              {
                "type": "bool",
                "name": "f_num_row_groups"
              },
              {
                "type": "int32_t",
                "name": "m_num_row_groups"
              },
              {
                "type": "bool",
                "name": "f_row_groups"
              },
              {
                "type": "bool",
                "name": "n_row_groups"
              },
              {
                "type": "return",
                "name": "n_row_groups"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "row_group_t",
            "members": [
              {
                "type": "page_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_base"
              },
              {
                "type": "int32_t",
                "name": "m_base"
              },
              {
                "type": "bool",
                "name": "f_row_present_flags"
              },
              {
                "type": "uint16_t",
                "name": "m_row_present_flags"
              },
              {
                "type": "bool",
                "name": "f_rows"
              },
              {
                "type": "uint16_t",
                "name": "m_group_index"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "page_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_group_index"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "genre_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_id"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "history_entry_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_track_id"
              },
              {
                "type": "uint32_t",
                "name": "m_playlist_id"
              },
              {
                "type": "uint32_t",
                "name": "m_entry_index"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_track_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "artwork_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_id"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "device_sql_long_ascii_t",
            "members": [
              {
                "type": "device_sql_string_t*",
                "name": "p__parent"
              },
              {
                "type": "uint16_t",
                "name": "m_length"
              },
              {
                "type": "uint8_t",
                "name": "m__unnamed1"
              },
              {
                "type": "string",
                "name": "m_text"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "device_sql_string_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_length"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "artist_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_ofs_name_far"
              },
              {
                "type": "uint16_t",
                "name": "m_ofs_name_far"
              },
              {
                "type": "bool",
                "name": "n_ofs_name_far"
              },
              {
                "type": "return",
                "name": "n_ofs_name_far"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "page_ref_t",
            "members": [
              {
                "type": "kstruct*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_body"
              },
              {
                "type": "uint32_t",
                "name": "m_index"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "kstruct*",
                "name": "m__parent"
              },
              {
                "type": "string",
                "name": "m__raw_body"
              },
              {
                "type": "return",
                "name": "m_index"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "track_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_unknown_string_8"
              },
              {
                "type": "bool",
                "name": "f_unknown_string_6"
              },
              {
                "type": "bool",
                "name": "f_analyze_date"
              },
              {
                "type": "bool",
                "name": "f_file_path"
              },
              {
                "type": "bool",
                "name": "f_date_added"
              },
              {
                "type": "bool",
                "name": "f_unknown_string_3"
              },
              {
                "type": "unknown",
                "name": "purpose"
              },
              {
                "type": "bool",
                "name": "f_texter"
              },
              {
                "type": "bool",
                "name": "f_kuvo_public"
              },
              {
                "type": "bool",
                "name": "f_mix_name"
              },
              {
                "type": "bool",
                "name": "f_unknown_string_5"
              },
              {
                "type": "bool",
                "name": "f_unknown_string_4"
              },
              {
                "type": "unknown",
                "name": "purpose"
              },
              {
                "type": "bool",
                "name": "f_message"
              },
              {
                "type": "bool",
                "name": "f_unknown_string_2"
              },
              {
                "type": "unknown",
                "name": "purpose"
              },
              {
                "type": "bool",
                "name": "f_isrc"
              },
              {
                "type": "bool",
                "name": "f_unknown_string_7"
              },
              {
                "type": "bool",
                "name": "f_filename"
              },
              {
                "type": "bool",
                "name": "f_analyze_path"
              },
              {
                "type": "bool",
                "name": "f_comment"
              },
              {
                "type": "bool",
                "name": "f_release_date"
              },
              {
                "type": "bool",
                "name": "f_autoload_hot_cues"
              },
              {
                "type": "bool",
                "name": "f_title"
              },
              {
                "type": "uint16_t",
                "name": "m__unnamed0"
              },
              {
                "type": "uint16_t",
                "name": "m_index_shift"
              },
              {
                "type": "uint32_t",
                "name": "m_bitmask"
              },
              {
                "type": "uint32_t",
                "name": "m_sample_rate"
              },
              {
                "type": "uint32_t",
                "name": "m_composer_id"
              },
              {
                "type": "uint32_t",
                "name": "m_file_size"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed6"
              },
              {
                "type": "uint16_t",
                "name": "m__unnamed7"
              },
              {
                "type": "uint16_t",
                "name": "m__unnamed8"
              },
              {
                "type": "uint32_t",
                "name": "m_artwork_id"
              },
              {
                "type": "uint32_t",
                "name": "m_key_id"
              },
              {
                "type": "uint32_t",
                "name": "m_original_artist_id"
              },
              {
                "type": "uint32_t",
                "name": "m_label_id"
              },
              {
                "type": "uint32_t",
                "name": "m_remixer_id"
              },
              {
                "type": "uint32_t",
                "name": "m_bitrate"
              },
              {
                "type": "uint32_t",
                "name": "m_track_number"
              },
              {
                "type": "uint32_t",
                "name": "m_tempo"
              },
              {
                "type": "uint32_t",
                "name": "m_genre_id"
              },
              {
                "type": "uint32_t",
                "name": "m_album_id"
              },
              {
                "type": "uint32_t",
                "name": "m_artist_id"
              },
              {
                "type": "uint32_t",
                "name": "m_id"
              },
              {
                "type": "uint16_t",
                "name": "m_disc_number"
              },
              {
                "type": "uint16_t",
                "name": "m_play_count"
              },
              {
                "type": "uint16_t",
                "name": "m_year"
              },
              {
                "type": "uint16_t",
                "name": "m_sample_depth"
              },
              {
                "type": "uint16_t",
                "name": "m_duration"
              },
              {
                "type": "uint16_t",
                "name": "m__unnamed26"
              },
              {
                "type": "uint8_t",
                "name": "m_color_id"
              },
              {
                "type": "uint8_t",
                "name": "m_rating"
              },
              {
                "type": "uint16_t",
                "name": "m__unnamed29"
              },
              {
                "type": "uint16_t",
                "name": "m__unnamed30"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m__unnamed0"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "key_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_id"
              },
              {
                "type": "uint32_t",
                "name": "m_id2"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "playlist_entry_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_entry_index"
              },
              {
                "type": "uint32_t",
                "name": "m_track_id"
              },
              {
                "type": "uint32_t",
                "name": "m_playlist_id"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_entry_index"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "label_row_t",
            "members": [
              {
                "type": "row_ref_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_id"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "row_ref_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "device_sql_long_utf16le_t",
            "members": [
              {
                "type": "device_sql_string_t*",
                "name": "p__parent"
              },
              {
                "type": "uint16_t",
                "name": "m_length"
              },
              {
                "type": "uint8_t",
                "name": "m__unnamed1"
              },
              {
                "type": "string",
                "name": "m_text"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "device_sql_string_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_length"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "table_t",
            "members": [
              {
                "type": "rekordbox_pdb_t*",
                "name": "p__parent"
              },
              {
                "type": "page_type_t",
                "name": "m_type"
              },
              {
                "type": "uint32_t",
                "name": "m_empty_candidate"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__root"
              },
              {
                "type": "rekordbox_pdb_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_type"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "row_ref_t",
            "members": [
              {
                "type": "row_group_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_ofs_row"
              },
              {
                "type": "uint16_t",
                "name": "m_ofs_row"
              },
              {
                "type": "bool",
                "name": "f_row_base"
              },
              {
                "type": "int32_t",
                "name": "m_row_base"
              },
              {
                "type": "bool",
                "name": "f_present"
              },
              {
                "type": "bool",
                "name": "m_present"
              },
              {
                "type": "bool",
                "name": "f_body"
              },
              {
                "type": "bool",
                "name": "n_body"
              },
              {
                "type": "return",
                "name": "n_body"
              }
            ],
            "parent": "kaitai"
          }
        ],
        "audio_keywords": [
          {
            "keyword": "beat",
            "count": 2,
            "contexts": []
          },
          {
            "keyword": "tempo",
            "count": 4,
            "contexts": [
              "urn m_track_number; }          /**          * The tempo at the start of the track in beats per minute,",
              "* multiplied by 100.          */         uint32_t tempo() const { return m_tempo; }          /**"
            ]
          },
          {
            "keyword": "time",
            "count": 6,
            "contexts": []
          },
          {
            "keyword": "analysis",
            "count": 2,
            "contexts": [
              "ub.com/Deep-Symmetry/crate-digger/blob/master/doc/Analysis.pdf Source  */  class rekordbox_pdb_t : public ka",
              "/**          * The file path of the track analysis, which allows rapid          * seeking to particu"
            ]
          },
          {
            "keyword": "waveform",
            "count": 1,
            "contexts": [
              "s,          * jumping to particular beats, visual waveform previews, and          * stores cue points and lo"
            ]
          },
          {
            "keyword": "sample",
            "count": 8,
            "contexts": [
              "urn m_bitmask; }          /**          * Playback sample rate of the audio file.          */         uint3",
              "}          /**          * The number of bits per sample of the audio file.          */         uint16_t s"
            ]
          },
          {
            "keyword": "rate",
            "count": 13,
            "contexts": [
              "* seeking to particular times in variable bit-rate files,          * jumping to particular beats, vi",
              "itmask; }          /**          * Playback sample rate of the audio file.          */         uint32_t s",
              "emixer_id; }          /**          * Playback bit rate of the audio file.          */         uint32_t b"
            ]
          },
          {
            "keyword": "key",
            "count": 14,
            "contexts": [
              "if the track has a known          * main musical key.          */         uint32_t key_id() const { re",
              "};      /**      * A row that holds a musical key and the associated ID.      */      class key_row",
              "**          * The unique identifier by which this key can be requested          * and linked from other"
            ]
          },
          {
            "keyword": "cue",
            "count": 5,
            "contexts": [
              ", visual waveform previews, and          * stores cue points and loops.          */         device_sql_"
            ]
          },
          {
            "keyword": "loop",
            "count": 1,
            "contexts": []
          },
          {
            "keyword": "structure",
            "count": 3,
            "contexts": [
              "cattered around it, and located using an index  * structure that builds backwards from the end of the page. E",
              "age. Each row  * of a given type has a fixed size structure which links to any  * variable-sized strings by t",
              "r offset, and      * table pages have a row index structure which is built from the      * end of the page ba"
            ]
          },
          {
            "keyword": "track",
            "count": 57,
            "contexts": [
              "story playlist ID and name, linking to      * the track IDs captured during a performance on the player.",
              "/**          * @flesniak said: \"a bitmask (1st track: 32)\"          */         uint8_t _unnamed7() con",
              "}     };      /**      * A row that associates a track with a position in a history playlist.      */"
            ]
          },
          {
            "keyword": "audio",
            "count": 6,
            "contexts": [
              "/**          * The file path of the track audio file.          */         device_sql_string_t* fi",
              "/**          * The file name of the track audio file.          */         device_sql_string_t* fi",
              "/**          * Playback sample rate of the audio file.          */         uint32_t sample_rate()"
            ]
          },
          {
            "keyword": "preview",
            "count": 1,
            "contexts": []
          },
          {
            "keyword": "color",
            "count": 13,
            "contexts": [
              "rent; }     };      /**      * A row that holds a color name and the associated ID.      */      class co",
              "**          * The unique identifier by which this color can be requested          * and linked from other",
              "* The variable-length string naming the color.          */         device_sql_string_t* name()"
            ]
          },
          {
            "keyword": "bitrate",
            "count": 3,
            "contexts": [
              "e of the audio file.          */         uint32_t bitrate() const { return m_bitrate; }          /**"
            ]
          },
          {
            "keyword": "index",
            "count": 50,
            "contexts": [
              "in the database, identifying their types and the index of  * the first of the series of linked pages tha",
              "ows are scattered around it, and located using an index  * structure that builds backwards from the end o",
              "d  * by other data. There is a bit map in the row index that identifies  * which rows are actually presen"
            ]
          },
          {
            "keyword": "entry",
            "count": 19,
            "contexts": [
              "/**          * The history playlist to which this entry belongs.          */         uint32_t playlist_id",
              "position within the playlist represented by this entry.          */         uint32_t entry_index() const",
              "position within the playlist represented by this entry.          */         uint32_t entry_index() const"
            ]
          },
          {
            "keyword": "data",
            "count": 13,
            "contexts": [
              "he heap that are too small to be used  * by other data. There is a bit map in the row index that identif",
              "ontain valid (or even necessarily well-formed)  * data.  *   * The majority of the work in reverse-engin",
              "next page, followed by a      * heap in which row data is found. At the end of the page there is      *"
            ]
          },
          {
            "keyword": "header",
            "count": 9,
            "contexts": [
              "into fixed-size blocks. The first block has a  * header that establishes the block size, and lists the ta",
              "ss  * any number of pages. The pages start with a header describing the  * page and linking to the next pa",
              "/**      * A table page, consisting of a short header describing the      * content of the page and lin"
            ]
          }
        ],
        "enums": [
          {
            "name": "page_type_t",
            "values": [
              {
                "name": "PAGE_TYPE_TRACKS",
                "value": "0"
              },
              {
                "name": "PAGE_TYPE_GENRES",
                "value": "1"
              },
              {
                "name": "PAGE_TYPE_ARTISTS",
                "value": "2"
              },
              {
                "name": "PAGE_TYPE_ALBUMS",
                "value": "3"
              },
              {
                "name": "PAGE_TYPE_LABELS",
                "value": "4"
              },
              {
                "name": "PAGE_TYPE_KEYS",
                "value": "5"
              },
              {
                "name": "PAGE_TYPE_COLORS",
                "value": "6"
              },
              {
                "name": "PAGE_TYPE_PLAYLIST_TREE",
                "value": "7"
              },
              {
                "name": "PAGE_TYPE_PLAYLIST_ENTRIES",
                "value": "8"
              },
              {
                "name": "PAGE_TYPE_UNKNOWN_9",
                "value": "9"
              },
              {
                "name": "PAGE_TYPE_UNKNOWN_10",
                "value": "10"
              },
              {
                "name": "PAGE_TYPE_HISTORY_PLAYLISTS",
                "value": "11"
              },
              {
                "name": "PAGE_TYPE_HISTORY_ENTRIES",
                "value": "12"
              },
              {
                "name": "PAGE_TYPE_ARTWORK",
                "value": "13"
              },
              {
                "name": "PAGE_TYPE_UNKNOWN_14",
                "value": "14"
              },
              {
                "name": "PAGE_TYPE_UNKNOWN_15",
                "value": "15"
              },
              {
                "name": "PAGE_TYPE_COLUMNS",
                "value": "16"
              },
              {
                "name": "PAGE_TYPE_UNKNOWN_17",
                "value": "17"
              },
              {
                "name": "PAGE_TYPE_UNKNOWN_18",
                "value": "18"
              },
              {
                "name": "PAGE_TYPE_HISTORY",
                "value": "19"
              }
            ]
          }
        ],
        "classes": [
          {
            "name": "rekordbox_pdb_t",
            "methods": [],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "device_sql_string_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint8_t",
                "name": "length_and_kind"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "history_playlist_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint32_t",
                "name": "id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "playlist_tree_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "bool",
                "name": "is_folder"
              },
              {
                "return_type": "uint32_t",
                "name": "parent_id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "color_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "string",
                "name": "_unnamed0"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "device_sql_short_ascii_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "int32_t",
                "name": "length"
              },
              {
                "return_type": "string",
                "name": "text"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "album_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "name"
              },
              {
                "return_type": "uint16_t",
                "name": "_unnamed0"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "page_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "this",
                "name": "page"
              },
              {
                "return_type": "uint16_t",
                "name": "num_rows"
              },
              {
                "return_type": "int32_t",
                "name": "num_row_groups"
              },
              {
                "return_type": "bool",
                "name": "_is_null_row_groups"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "row_group_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "int32_t",
                "name": "base"
              },
              {
                "return_type": "uint16_t",
                "name": "row_present_flags"
              },
              {
                "return_type": "uint16_t",
                "name": "group_index"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "genre_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "other",
                "name": "rows"
              },
              {
                "return_type": "uint32_t",
                "name": "id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "history_entry_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint32_t",
                "name": "track_id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "artwork_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "other",
                "name": "rows"
              },
              {
                "return_type": "uint32_t",
                "name": "id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "device_sql_long_ascii_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint16_t",
                "name": "length"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "artist_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "bool",
                "name": "_is_null_ofs_name_far"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "page_ref_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "page_t*",
                "name": "body"
              },
              {
                "return_type": "uint32_t",
                "name": "index"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "track_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "unknown_string_8"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "unknown_string_6"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "analyze_date"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "file_path"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "date_added"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "unknown_string_3"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "texter"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "kuvo_public"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "mix_name"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "unknown_string_5"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "unknown_string_4"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "message"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "unknown_string_2"
              },
              {
                "return_type": "when",
                "name": "known"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "isrc"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "unknown_string_7"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "filename"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "analyze_path"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "comment"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "release_date"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "autoload_hot_cues"
              },
              {
                "return_type": "device_sql_string_t*",
                "name": "title"
              },
              {
                "return_type": "uint16_t",
                "name": "_unnamed0"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "key_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "other",
                "name": "rows"
              },
              {
                "return_type": "uint32_t",
                "name": "id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "playlist_entry_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint32_t",
                "name": "entry_index"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "label_row_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "other",
                "name": "rows"
              },
              {
                "return_type": "uint32_t",
                "name": "id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "device_sql_long_utf16le_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint16_t",
                "name": "length"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "table_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "page_type_t",
                "name": "type"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "row_ref_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "the",
                "name": "row"
              },
              {
                "return_type": "uint16_t",
                "name": "ofs_row"
              },
              {
                "return_type": "of",
                "name": "pointers"
              },
              {
                "return_type": "int32_t",
                "name": "row_base"
              },
              {
                "return_type": "bool",
                "name": "present"
              },
              {
                "return_type": "bool",
                "name": "_is_null_body"
              }
            ],
            "members": [],
            "parent": "kaitai"
          }
        ],
        "functions": [
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "bool",
            "name": "is_folder"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "int32_t",
            "name": "length"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "name"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "uint16_t",
            "name": "num_rows"
          },
          {
            "return_type": "int32_t",
            "name": "num_row_groups"
          },
          {
            "return_type": "bool",
            "name": "_is_null_row_groups"
          },
          {
            "return_type": "int32_t",
            "name": "heap_pos"
          },
          {
            "return_type": "bool",
            "name": "is_data_page"
          },
          {
            "return_type": "bool",
            "name": "_is_null_heap"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "int32_t",
            "name": "base"
          },
          {
            "return_type": "uint16_t",
            "name": "row_present_flags"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "bool",
            "name": "_is_null_ofs_name_far"
          },
          {
            "return_type": "uint16_t",
            "name": "ofs_name_far"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "name"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "page_t*",
            "name": "body"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "unknown_string_8"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "unknown_string_6"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "analyze_date"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "file_path"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "date_added"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "unknown_string_3"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "texter"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "kuvo_public"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "mix_name"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "unknown_string_5"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "unknown_string_4"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "message"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "unknown_string_2"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "isrc"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "unknown_string_7"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "filename"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "analyze_path"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "comment"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "release_date"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "autoload_hot_cues"
          },
          {
            "return_type": "device_sql_string_t*",
            "name": "title"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "uint16_t",
            "name": "ofs_row"
          },
          {
            "return_type": "int32_t",
            "name": "row_base"
          },
          {
            "return_type": "bool",
            "name": "present"
          },
          {
            "return_type": "bool",
            "name": "_is_null_body"
          },
          {
            "return_type": "kstruct*",
            "name": "body"
          }
        ],
        "comments": [
          "* This is a relational database format designed to be efficiently used * by very low power devices (there were deployments on 16 bit devices * with 32K of RAM). Today you are most likely to encounter it within * the Pioneer Professional DJ ecosystem, because it is the format that * their rekordbox software uses to write USB and SD media which can be * mounted in DJ controllers and used to play and mix music. * * It has been reverse-engineered to facilitate sophisticated * integrations with light and laser shows, videos, and other musical * instruments, by supporting deep knowledge of what is playing and * what is coming next through monitoring the network communications of * the players. * * The file is divided into fixed-size blocks. The first block has a * header that establishes the block size, and lists the tables * available in the database, identifying their types and the index of * the first of the series of linked pages that make up that table. * * Each table is made up of a series of rows which may be spread across * any number of pages. The pages start with a header describing the * page and linking to the next page. The rest of the page is used as a * heap: rows are scattered around it, and located using an index * structure that builds backwards from the end of the page. Each row * of a given type has a fixed size structure which links to any * variable-sized strings by their offsets within the page. * * As changes are made to the table, some records may become unused, * and there may be gaps within the heap that are too small to be used * by other data. There is a bit map in the row index that identifies * which rows are actually present. Rows that are not present must be * ignored: they do not contain valid (or even necessarily well-formed) * data. * * The majority of the work in reverse-engineering this format was * performed by @henrybetts and @flesniak, for which I am hugely * grateful. @GreyCat helped me learn the intricacies (and best * practices) of Kaitai far faster than I would have managed on my own. * \\sa https://github.com/Deep-Symmetry/crate-digger/blob/master/doc/Analysis.pdf Source",
          "* A variable length string which can be stored in a variety of * different encodings.",
          "* Mangled length of an ordinary ASCII string if odd, or a flag * indicating another encoding with a longer length value to * follow.",
          "* A row that holds a history playlist ID and name, linking to * the track IDs captured during a performance on the player.",
          "* The unique identifier by which this history playlist can * be requested.",
          "* The variable-length string naming the playlist.",
          "* A row that holds a playlist name, ID, indication of whether it * is an ordinary playlist or a folder of other playlists, a link * to its parent folder, and its sort order.",
          "* The ID of the `playlist_tree_row` in which this one can be * found, or `0` if this playlist exists at the root level.",
          "* The order in which the entries of this playlist are sorted.",
          "* The unique identifier by which this playlist or folder can * be requested and linked from other rows."
        ]
      },
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h": {
        "file_name": "rekordbox_anlz.h",
        "file_type": ".h",
        "line_count": 1257,
        "size_bytes": 37342,
        "data_structures": [
          {
            "type": "class",
            "name": "rekordbox_anlz_t",
            "members": [
              {
                "type": "class",
                "name": "phrase_mid_t"
              },
              {
                "type": "class",
                "name": "path_tag_t"
              },
              {
                "type": "class",
                "name": "wave_preview_tag_t"
              },
              {
                "type": "class",
                "name": "beat_grid_tag_t"
              },
              {
                "type": "class",
                "name": "song_structure_body_t"
              },
              {
                "type": "class",
                "name": "wave_color_preview_tag_t"
              },
              {
                "type": "class",
                "name": "phrase_high_t"
              },
              {
                "type": "class",
                "name": "wave_scroll_tag_t"
              },
              {
                "type": "class",
                "name": "song_structure_tag_t"
              },
              {
                "type": "class",
                "name": "cue_extended_entry_t"
              },
              {
                "type": "class",
                "name": "vbr_tag_t"
              },
              {
                "type": "class",
                "name": "song_structure_entry_t"
              },
              {
                "type": "class",
                "name": "cue_entry_t"
              },
              {
                "type": "class",
                "name": "beat_grid_beat_t"
              },
              {
                "type": "class",
                "name": "cue_extended_tag_t"
              },
              {
                "type": "class",
                "name": "phrase_low_t"
              },
              {
                "type": "class",
                "name": "unknown_tag_t"
              },
              {
                "type": "class",
                "name": "tagged_section_t"
              },
              {
                "type": "class",
                "name": "wave_color_scroll_tag_t"
              },
              {
                "type": "class",
                "name": "cue_tag_t"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "phrase_mid_t",
            "members": [
              {
                "type": "song_structure_entry_t*",
                "name": "p__parent"
              },
              {
                "type": "mood_mid_phrase_t",
                "name": "m_id"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "song_structure_entry_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "path_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_len_path"
              },
              {
                "type": "string",
                "name": "m_path"
              },
              {
                "type": "bool",
                "name": "n_path"
              },
              {
                "type": "return",
                "name": "n_path"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "wave_preview_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_len_data"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed1"
              },
              {
                "type": "string",
                "name": "m_data"
              },
              {
                "type": "bool",
                "name": "n_data"
              },
              {
                "type": "return",
                "name": "n_data"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "beat_grid_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed0"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed1"
              },
              {
                "type": "uint32_t",
                "name": "m_num_beats"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m__unnamed0"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "song_structure_body_t",
            "members": [
              {
                "type": "song_structure_tag_t*",
                "name": "p__parent"
              },
              {
                "type": "track_mood_t",
                "name": "m_mood"
              },
              {
                "type": "string",
                "name": "m__unnamed1"
              },
              {
                "type": "uint16_t",
                "name": "m_end_beat"
              },
              {
                "type": "string",
                "name": "m__unnamed3"
              },
              {
                "type": "track_bank_t",
                "name": "m_bank"
              },
              {
                "type": "string",
                "name": "m__unnamed5"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "song_structure_tag_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_mood"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "wave_color_preview_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entry_bytes"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entries"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed2"
              },
              {
                "type": "string",
                "name": "m_entries"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_len_entry_bytes"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "phrase_high_t",
            "members": [
              {
                "type": "song_structure_entry_t*",
                "name": "p__parent"
              },
              {
                "type": "mood_high_phrase_t",
                "name": "m_id"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "song_structure_entry_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "wave_scroll_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entry_bytes"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entries"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed2"
              },
              {
                "type": "string",
                "name": "m_entries"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_len_entry_bytes"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "song_structure_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "bool",
                "name": "f_c"
              },
              {
                "type": "uint16_t",
                "name": "m_c"
              },
              {
                "type": "bool",
                "name": "f_raw_mood"
              },
              {
                "type": "uint16_t",
                "name": "m_raw_mood"
              },
              {
                "type": "bool",
                "name": "f_is_masked"
              },
              {
                "type": "bool",
                "name": "m_is_masked"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entry_bytes"
              },
              {
                "type": "uint16_t",
                "name": "m_len_entries"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "string",
                "name": "m__raw_body"
              },
              {
                "type": "return",
                "name": "m_len_entry_bytes"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "cue_extended_entry_t",
            "members": [
              {
                "type": "cue_extended_tag_t*",
                "name": "p__parent"
              },
              {
                "type": "string",
                "name": "m_magic"
              },
              {
                "type": "uint32_t",
                "name": "m_len_header"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entry"
              },
              {
                "type": "uint32_t",
                "name": "m_hot_cue"
              },
              {
                "type": "cue_entry_type_t",
                "name": "m_type"
              },
              {
                "type": "string",
                "name": "m__unnamed5"
              },
              {
                "type": "uint32_t",
                "name": "m_time"
              },
              {
                "type": "uint32_t",
                "name": "m_loop_time"
              },
              {
                "type": "uint8_t",
                "name": "m_color_id"
              },
              {
                "type": "string",
                "name": "m__unnamed9"
              },
              {
                "type": "uint16_t",
                "name": "m_loop_numerator"
              },
              {
                "type": "uint16_t",
                "name": "m_loop_denominator"
              },
              {
                "type": "uint32_t",
                "name": "m_len_comment"
              },
              {
                "type": "bool",
                "name": "n_len_comment"
              },
              {
                "type": "return",
                "name": "n_len_comment"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "vbr_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed0"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m__unnamed0"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "song_structure_entry_t",
            "members": [
              {
                "type": "song_structure_body_t*",
                "name": "p__parent"
              },
              {
                "type": "uint16_t",
                "name": "m_index"
              },
              {
                "type": "uint16_t",
                "name": "m_beat"
              },
              {
                "type": "string",
                "name": "m__unnamed3"
              },
              {
                "type": "uint8_t",
                "name": "m_k1"
              },
              {
                "type": "string",
                "name": "m__unnamed5"
              },
              {
                "type": "uint8_t",
                "name": "m_k2"
              },
              {
                "type": "string",
                "name": "m__unnamed7"
              },
              {
                "type": "uint8_t",
                "name": "m_b"
              },
              {
                "type": "uint16_t",
                "name": "m_beat2"
              },
              {
                "type": "uint16_t",
                "name": "m_beat3"
              },
              {
                "type": "uint16_t",
                "name": "m_beat4"
              },
              {
                "type": "string",
                "name": "m__unnamed12"
              },
              {
                "type": "uint8_t",
                "name": "m_k3"
              },
              {
                "type": "string",
                "name": "m__unnamed14"
              },
              {
                "type": "uint8_t",
                "name": "m_fill"
              },
              {
                "type": "uint16_t",
                "name": "m_beat_fill"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "song_structure_body_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_index"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "cue_entry_t",
            "members": [
              {
                "type": "cue_tag_t*",
                "name": "p__parent"
              },
              {
                "type": "string",
                "name": "m_magic"
              },
              {
                "type": "uint32_t",
                "name": "m_len_header"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entry"
              },
              {
                "type": "uint32_t",
                "name": "m_hot_cue"
              },
              {
                "type": "cue_entry_status_t",
                "name": "m_status"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed5"
              },
              {
                "type": "uint16_t",
                "name": "m_order_first"
              },
              {
                "type": "uint16_t",
                "name": "m_order_last"
              },
              {
                "type": "cue_entry_type_t",
                "name": "m_type"
              },
              {
                "type": "string",
                "name": "m__unnamed9"
              },
              {
                "type": "uint32_t",
                "name": "m_time"
              },
              {
                "type": "uint32_t",
                "name": "m_loop_time"
              },
              {
                "type": "string",
                "name": "m__unnamed12"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "cue_tag_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_magic"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "beat_grid_beat_t",
            "members": [
              {
                "type": "beat_grid_tag_t*",
                "name": "p__parent"
              },
              {
                "type": "uint16_t",
                "name": "m_beat_number"
              },
              {
                "type": "uint16_t",
                "name": "m_tempo"
              },
              {
                "type": "uint32_t",
                "name": "m_time"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "beat_grid_tag_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_beat_number"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "cue_extended_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "cue_list_type_t",
                "name": "m_type"
              },
              {
                "type": "uint16_t",
                "name": "m_num_cues"
              },
              {
                "type": "string",
                "name": "m__unnamed2"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_type"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "phrase_low_t",
            "members": [
              {
                "type": "song_structure_entry_t*",
                "name": "p__parent"
              },
              {
                "type": "mood_low_phrase_t",
                "name": "m_id"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "song_structure_entry_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_id"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "unknown_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m__root"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "tagged_section_t",
            "members": [
              {
                "type": "rekordbox_anlz_t*",
                "name": "p__parent"
              },
              {
                "type": "section_tags_t",
                "name": "m_fourcc"
              },
              {
                "type": "uint32_t",
                "name": "m_len_header"
              },
              {
                "type": "uint32_t",
                "name": "m_len_tag"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__parent"
              },
              {
                "type": "string",
                "name": "m__raw_body"
              },
              {
                "type": "return",
                "name": "m_fourcc"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "wave_color_scroll_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entry_bytes"
              },
              {
                "type": "uint32_t",
                "name": "m_len_entries"
              },
              {
                "type": "uint32_t",
                "name": "m__unnamed2"
              },
              {
                "type": "string",
                "name": "m_entries"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_len_entry_bytes"
              }
            ],
            "parent": "kaitai"
          },
          {
            "type": "class",
            "name": "cue_tag_t",
            "members": [
              {
                "type": "tagged_section_t*",
                "name": "p__parent"
              },
              {
                "type": "cue_list_type_t",
                "name": "m_type"
              },
              {
                "type": "string",
                "name": "m__unnamed1"
              },
              {
                "type": "uint16_t",
                "name": "m_num_cues"
              },
              {
                "type": "uint32_t",
                "name": "m_memory_count"
              },
              {
                "type": "rekordbox_anlz_t*",
                "name": "m__root"
              },
              {
                "type": "tagged_section_t*",
                "name": "m__parent"
              },
              {
                "type": "return",
                "name": "m_type"
              }
            ],
            "parent": "kaitai"
          }
        ],
        "audio_keywords": [
          {
            "keyword": "beat",
            "count": 71,
            "contexts": [
              "acilitate DJ performance. They include waveforms, beat grids  * (information about the precise time at w",
              "(information about the precise time at which each beat occurs),  * time indices to allow efficient seeki",
              "unnamed1; }          /**          * The number of beat entries which follow.          */         uint32_"
            ]
          },
          {
            "keyword": "tempo",
            "count": 5,
            "contexts": [
              "r position, the time at which they occur, and the tempo      * at that point.      */      class beat_gri",
              "turn m_beat_number; }          /**          * The tempo at the time of this beat, in beats per minute,",
              "* multiplied by 100.          */         uint16_t tempo() const { return m_tempo; }          /**"
            ]
          },
          {
            "keyword": "time",
            "count": 23,
            "contexts": [
              "rms, beat grids  * (information about the precise time at which each beat occurs),  * time indices to al",
              "t the precise time at which each beat occurs),  * time indices to allow efficient seeking to specific po",
              "e track, recording      * their bar position, the time at which they occur, and the tempo      * at that"
            ]
          },
          {
            "keyword": "grid",
            "count": 17,
            "contexts": [
              "}          /**          * The entries of the beat grid.          */         std::vector<std::unique_ptr<",
              "/**      * Describes an individual beat in a beat grid.      */      class beat_grid_beat_t : public kai"
            ]
          },
          {
            "keyword": "analysis",
            "count": 3,
            "contexts": [
              "res the file path of the audio file to which this analysis      * applies.      */      class path_tag_t : p",
              "ordbox assigns the track as a whole during phrase analysis.          */         track_mood_t mood() const {",
              "t;  public:      /**      * Identifies this as an analysis file.      */     std::string magic() const { ret"
            ]
          },
          {
            "keyword": "waveform",
            "count": 11,
            "contexts": [
              "turn m__parent; }     };      /**      * Stores a waveform preview image suitable for display above      * t",
              "}          /**          * The actual bytes of the waveform preview.          */         std::string data() c",
              "rent; }     };      /**      * A larger, colorful waveform preview image suitable for display      * above t"
            ]
          },
          {
            "keyword": "rate",
            "count": 3,
            "contexts": [
              "king to specific positions  * inside variable bit-rate audio streams, and lists of memory cues  * and lo"
            ]
          },
          {
            "keyword": "pitch",
            "count": 1,
            "contexts": [
              "n          * the track is played at normal (100%) pitch.          */         uint32_t time() const { retu"
            ]
          },
          {
            "keyword": "cue",
            "count": 106,
            "contexts": [
              "m__io__raw_body.get(); }     };      /**      * A cue extended list entry. Can either describe a memory",
              "extended list entry. Can either describe a memory cue or a      * loop.      */      class cue_extended",
              "/**          * Identifies this as an extended cue list entry (cue point).          */         std::"
            ]
          },
          {
            "keyword": "loop",
            "count": 33,
            "contexts": [
              "te audio streams, and lists of memory cues  * and loop points. They are used by Pioneer professional DJ",
              "try. Can either describe a memory cue or a      * loop.      */      class cue_extended_entry_t : public",
              "ndicates whether this is a regular cue point or a loop.          */         cue_entry_type_t type() cons"
            ]
          },
          {
            "keyword": "phrase",
            "count": 66,
            "contexts": [
              "ich rekordbox assigns the track as a whole during phrase analysis.          */         track_mood_t mood()",
              "/**          * The beat number at which the last phrase ends. The track may          * continue after the",
              "The track may          * continue after the last phrase ends. If this is the case, it will          * mos"
            ]
          },
          {
            "keyword": "structure",
            "count": 35,
            "contexts": [
              "};      /**      * Stores the rest of the song structure tag, which can only be      * parsed after unmask",
              "_parent; }     };      /**      * Stores the song structure, also known as phrases (intro, verse,      * brid",
              "return m__parent; }     };      /**      * A song structure entry, represents a single phrase.      */      c"
            ]
          },
          {
            "keyword": "mood",
            "count": 54,
            "contexts": [
              "_parent;      public:          /**          * The mood which rekordbox assigns the track as a whole duri",
              "phrase analysis.          */         track_mood_t mood() const { return m_mood; }         std::string _u",
              "flags that identify phrase kind variants in high-mood tracks.          */         uint8_t k1() const {"
            ]
          },
          {
            "keyword": "track",
            "count": 33,
            "contexts": [
              "lay above      * the touch strip for jumping to a track position.      */      class wave_preview_tag_t :",
              "* Holds a list of all the beats found within the track, recording      * their bar position, the time at",
              "*          * The mood which rekordbox assigns the track as a whole during phrase analysis.          */"
            ]
          },
          {
            "keyword": "audio",
            "count": 4,
            "contexts": [
              "ese files are created by rekordbox when analyzing audio tracks  * to facilitate DJ performance. They incl",
              "to specific positions  * inside variable bit-rate audio streams, and lists of memory cues  * and loop poi",
              "};      /**      * Stores the file path of the audio file to which this analysis      * applies."
            ]
          },
          {
            "keyword": "milliseconds",
            "count": 5,
            "contexts": [
              "amed5; }          /**          * The position, in milliseconds, at which the cue point lies          * in the tr",
              "_time; }          /**          * The position, in milliseconds, at which the player loops          * back to the",
              "amed9; }          /**          * The position, in milliseconds, at which the cue point lies          * in the tr"
            ]
          },
          {
            "keyword": "preview",
            "count": 14,
            "contexts": [
              "arent; }     };      /**      * Stores a waveform preview image suitable for display above      * the touch",
              "/**          * The length, in bytes, of the preview data itself. This is          * slightly redundan",
              "/**          * The actual bytes of the waveform preview.          */         std::string data() const { r"
            ]
          },
          {
            "keyword": "scroll",
            "count": 12,
            "contexts": []
          },
          {
            "keyword": "color",
            "count": 52,
            "contexts": [
              "ry cue or loop          * and has been assigned a color.          */         uint8_t color_id() const { r",
              "t; }          /**          * A lookup value for a color table? We use this to index to the hot cue colors",
              "/**          * The red component of the hot cue color to be displayed.          */         uint8_t colo"
            ]
          },
          {
            "keyword": "vbr",
            "count": 5,
            "contexts": []
          },
          {
            "keyword": "bitrate",
            "count": 1,
            "contexts": [
              "king to particular times      * within a variable-bitrate audio file.      */      class vbr_tag_t : public"
            ]
          },
          {
            "keyword": "index",
            "count": 8,
            "contexts": [
              "A lookup value for a color table? We use this to index to the hot cue colors shown in rekordbox.",
              "urn m__parent; }     };      /**      * Stores an index allowing rapid seeking to particular times      *",
              "urn m__unnamed0; }         std::vector<uint32_t>* index() const { return m_index.get(); }         rekordb"
            ]
          },
          {
            "keyword": "entry",
            "count": 67,
            "contexts": [
              "public:          /**          * The size of each entry, in bytes. Seems to always be 6.          */",
              "public:          /**          * The size of each entry, in bytes. Seems to always be 1.          */",
              "public:          /**          * The size of each entry, in bytes. Seems to always be 24.          */"
            ]
          },
          {
            "keyword": "data",
            "count": 15,
            "contexts": [
              "data;      public:         bool _is_null_data() { data(); return n_data; };      private:         rekord",
              "*          * The length, in bytes, of the preview data itself. This is          * slightly redundant bec",
              "waveform preview.          */         std::string data() const { return m_data; }         rekordbox_anlz"
            ]
          },
          {
            "keyword": "header",
            "count": 16,
            "contexts": [
              "fied by a four-byte magic      * sequence, with a header specifying its length, and whose payload      * i",
              "/**          * The size, in bytes, of the header portion of the tag.          */         uint32_t",
              "size, in bytes, of this entire tag, counting the header.          */         uint32_t len_tag() const { r"
            ]
          }
        ],
        "enums": [
          {
            "name": "cue_entry_status_t",
            "values": [
              {
                "name": "CUE_ENTRY_STATUS_DISABLED",
                "value": "0"
              },
              {
                "name": "CUE_ENTRY_STATUS_ENABLED",
                "value": "1"
              },
              {
                "name": "CUE_ENTRY_STATUS_ACTIVE_LOOP",
                "value": "4"
              }
            ]
          },
          {
            "name": "cue_list_type_t",
            "values": [
              {
                "name": "CUE_LIST_TYPE_MEMORY_CUES",
                "value": "0"
              },
              {
                "name": "CUE_LIST_TYPE_HOT_CUES",
                "value": "1"
              }
            ]
          },
          {
            "name": "mood_high_phrase_t",
            "values": [
              {
                "name": "MOOD_HIGH_PHRASE_INTRO",
                "value": "1"
              },
              {
                "name": "MOOD_HIGH_PHRASE_UP",
                "value": "2"
              },
              {
                "name": "MOOD_HIGH_PHRASE_DOWN",
                "value": "3"
              },
              {
                "name": "MOOD_HIGH_PHRASE_CHORUS",
                "value": "5"
              },
              {
                "name": "MOOD_HIGH_PHRASE_OUTRO",
                "value": "6"
              }
            ]
          },
          {
            "name": "track_bank_t",
            "values": [
              {
                "name": "TRACK_BANK_DEFAULT",
                "value": "0"
              },
              {
                "name": "TRACK_BANK_COOL",
                "value": "1"
              },
              {
                "name": "TRACK_BANK_NATURAL",
                "value": "2"
              },
              {
                "name": "TRACK_BANK_HOT",
                "value": "3"
              },
              {
                "name": "TRACK_BANK_SUBTLE",
                "value": "4"
              },
              {
                "name": "TRACK_BANK_WARM",
                "value": "5"
              },
              {
                "name": "TRACK_BANK_VIVID",
                "value": "6"
              },
              {
                "name": "TRACK_BANK_CLUB_1",
                "value": "7"
              },
              {
                "name": "TRACK_BANK_CLUB_2",
                "value": "8"
              }
            ]
          },
          {
            "name": "cue_entry_type_t",
            "values": [
              {
                "name": "CUE_ENTRY_TYPE_MEMORY_CUE",
                "value": "1"
              },
              {
                "name": "CUE_ENTRY_TYPE_LOOP",
                "value": "2"
              }
            ]
          },
          {
            "name": "section_tags_t",
            "values": [
              {
                "name": "SECTION_TAGS_CUES_2",
                "value": "1346588466"
              },
              {
                "name": "SECTION_TAGS_CUES",
                "value": "1346588482"
              },
              {
                "name": "SECTION_TAGS_PATH",
                "value": "1347441736"
              },
              {
                "name": "SECTION_TAGS_BEAT_GRID",
                "value": "1347507290"
              },
              {
                "name": "SECTION_TAGS_SONG_STRUCTURE",
                "value": "1347638089"
              },
              {
                "name": "SECTION_TAGS_VBR",
                "value": "1347830354"
              },
              {
                "name": "SECTION_TAGS_WAVE_PREVIEW",
                "value": "1347895638"
              },
              {
                "name": "SECTION_TAGS_WAVE_TINY",
                "value": "1347900978"
              },
              {
                "name": "SECTION_TAGS_WAVE_SCROLL",
                "value": "1347900979"
              },
              {
                "name": "SECTION_TAGS_WAVE_COLOR_PREVIEW",
                "value": "1347900980"
              },
              {
                "name": "SECTION_TAGS_WAVE_COLOR_SCROLL",
                "value": "1347900981"
              }
            ]
          },
          {
            "name": "track_mood_t",
            "values": [
              {
                "name": "TRACK_MOOD_HIGH",
                "value": "1"
              },
              {
                "name": "TRACK_MOOD_MID",
                "value": "2"
              },
              {
                "name": "TRACK_MOOD_LOW",
                "value": "3"
              }
            ]
          },
          {
            "name": "mood_mid_phrase_t",
            "values": [
              {
                "name": "MOOD_MID_PHRASE_INTRO",
                "value": "1"
              },
              {
                "name": "MOOD_MID_PHRASE_VERSE_1",
                "value": "2"
              },
              {
                "name": "MOOD_MID_PHRASE_VERSE_2",
                "value": "3"
              },
              {
                "name": "MOOD_MID_PHRASE_VERSE_3",
                "value": "4"
              },
              {
                "name": "MOOD_MID_PHRASE_VERSE_4",
                "value": "5"
              },
              {
                "name": "MOOD_MID_PHRASE_VERSE_5",
                "value": "6"
              },
              {
                "name": "MOOD_MID_PHRASE_VERSE_6",
                "value": "7"
              },
              {
                "name": "MOOD_MID_PHRASE_BRIDGE",
                "value": "8"
              },
              {
                "name": "MOOD_MID_PHRASE_CHORUS",
                "value": "9"
              },
              {
                "name": "MOOD_MID_PHRASE_OUTRO",
                "value": "10"
              }
            ]
          },
          {
            "name": "mood_low_phrase_t",
            "values": [
              {
                "name": "MOOD_LOW_PHRASE_INTRO",
                "value": "1"
              },
              {
                "name": "MOOD_LOW_PHRASE_VERSE_1",
                "value": "2"
              },
              {
                "name": "MOOD_LOW_PHRASE_VERSE_1B",
                "value": "3"
              },
              {
                "name": "MOOD_LOW_PHRASE_VERSE_1C",
                "value": "4"
              },
              {
                "name": "MOOD_LOW_PHRASE_VERSE_2",
                "value": "5"
              },
              {
                "name": "MOOD_LOW_PHRASE_VERSE_2B",
                "value": "6"
              },
              {
                "name": "MOOD_LOW_PHRASE_VERSE_2C",
                "value": "7"
              },
              {
                "name": "MOOD_LOW_PHRASE_BRIDGE",
                "value": "8"
              },
              {
                "name": "MOOD_LOW_PHRASE_CHORUS",
                "value": "9"
              },
              {
                "name": "MOOD_LOW_PHRASE_OUTRO",
                "value": "10"
              }
            ]
          }
        ],
        "classes": [
          {
            "name": "rekordbox_anlz_t",
            "methods": [],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "phrase_mid_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "mood_mid_phrase_t",
                "name": "id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "path_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "bool",
                "name": "_is_null_path"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "wave_preview_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "bool",
                "name": "_is_null_data"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "beat_grid_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint32_t",
                "name": "_unnamed0"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "song_structure_body_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "track_mood_t",
                "name": "mood"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "wave_color_preview_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint32_t",
                "name": "len_entry_bytes"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "phrase_high_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "mood_high_phrase_t",
                "name": "id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "wave_scroll_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint32_t",
                "name": "len_entry_bytes"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "song_structure_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint16_t",
                "name": "c"
              },
              {
                "return_type": "uint16_t",
                "name": "raw_mood"
              },
              {
                "return_type": "bool",
                "name": "is_masked"
              },
              {
                "return_type": "uint32_t",
                "name": "len_entry_bytes"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "cue_extended_entry_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "bool",
                "name": "_is_null_len_comment"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "vbr_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint32_t",
                "name": "_unnamed0"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "song_structure_entry_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint16_t",
                "name": "index"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "cue_entry_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "list",
                "name": "entry"
              },
              {
                "return_type": "string",
                "name": "magic"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "beat_grid_beat_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint16_t",
                "name": "beat_number"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "cue_extended_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "cue_list_type_t",
                "name": "type"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "phrase_low_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "mood_low_phrase_t",
                "name": "id"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "unknown_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "rekordbox_anlz_t*",
                "name": "_root"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "tagged_section_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "section_tags_t",
                "name": "fourcc"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "wave_color_scroll_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "uint32_t",
                "name": "len_entry_bytes"
              }
            ],
            "members": [],
            "parent": "kaitai"
          },
          {
            "name": "cue_tag_t",
            "methods": [
              {
                "return_type": "void",
                "name": "_read"
              },
              {
                "return_type": "void",
                "name": "_clean_up"
              },
              {
                "return_type": "cue_list_type_t",
                "name": "type"
              }
            ],
            "members": [],
            "parent": "kaitai"
          }
        ],
        "functions": [
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "bool",
            "name": "_is_null_path"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "bool",
            "name": "_is_null_data"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "uint16_t",
            "name": "c"
          },
          {
            "return_type": "uint16_t",
            "name": "raw_mood"
          },
          {
            "return_type": "bool",
            "name": "is_masked"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "bool",
            "name": "_is_null_len_comment"
          },
          {
            "return_type": "bool",
            "name": "_is_null_comment"
          },
          {
            "return_type": "bool",
            "name": "_is_null_color_code"
          },
          {
            "return_type": "bool",
            "name": "_is_null_color_red"
          },
          {
            "return_type": "bool",
            "name": "_is_null_color_green"
          },
          {
            "return_type": "bool",
            "name": "_is_null_color_blue"
          },
          {
            "return_type": "bool",
            "name": "_is_null__unnamed18"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          },
          {
            "return_type": "void",
            "name": "_read"
          },
          {
            "return_type": "void",
            "name": "_clean_up"
          }
        ],
        "comments": [
          "* These files are created by rekordbox when analyzing audio tracks * to facilitate DJ performance. They include waveforms, beat grids * (information about the precise time at which each beat occurs), * time indices to allow efficient seeking to specific positions * inside variable bit-rate audio streams, and lists of memory cues * and loop points. They are used by Pioneer professional DJ * equipment. * * The format has been reverse-engineered to facilitate sophisticated * integrations with light and laser shows, videos, and other musical * instruments, by supporting deep knowledge of what is playing and * what is coming next through monitoring the network communications * of the players. * \\sa https://reverseengineering.stackexchange.com/questions/4311/help-reversing-a-edb-database-file-for-pioneers-rekordbox-software Source",
          "* Stores the file path of the audio file to which this analysis * applies.",
          "* Stores a waveform preview image suitable for display above * the touch strip for jumping to a track position.",
          "* The length, in bytes, of the preview data itself. This is * slightly redundant because it can be computed from the * length of the tag.",
          "* The actual bytes of the waveform preview.",
          "* Holds a list of all the beats found within the track, recording * their bar position, the time at which they occur, and the tempo * at that point.",
          "* The number of beat entries which follow.",
          "* The entries of the beat grid.",
          "* Stores the rest of the song structure tag, which can only be * parsed after unmasking.",
          "* The mood which rekordbox assigns the track as a whole during phrase analysis."
        ]
      },
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp": {
        "file_name": "rekordbox_anlz.cpp",
        "file_type": ".cpp",
        "line_count": 728,
        "size_bytes": 24081,
        "data_structures": [],
        "audio_keywords": [
          {
            "keyword": "beat",
            "count": 44,
            "contexts": []
          },
          {
            "keyword": "tempo",
            "count": 1,
            "contexts": []
          },
          {
            "keyword": "time",
            "count": 5,
            "contexts": []
          },
          {
            "keyword": "grid",
            "count": 20,
            "contexts": []
          },
          {
            "keyword": "rate",
            "count": 1,
            "contexts": []
          },
          {
            "keyword": "cue",
            "count": 63,
            "contexts": []
          },
          {
            "keyword": "loop",
            "count": 4,
            "contexts": []
          },
          {
            "keyword": "phrase",
            "count": 29,
            "contexts": []
          },
          {
            "keyword": "structure",
            "count": 35,
            "contexts": []
          },
          {
            "keyword": "mood",
            "count": 18,
            "contexts": [
              "beat = m__io->read_u2be();     switch (_parent()->mood()) {     case rekordbox_anlz_t::TRACK_MOOD_HIGH:"
            ]
          },
          {
            "keyword": "track",
            "count": 5,
            "contexts": []
          },
          {
            "keyword": "preview",
            "count": 20,
            "contexts": []
          },
          {
            "keyword": "scroll",
            "count": 18,
            "contexts": []
          },
          {
            "keyword": "color",
            "count": 35,
            "contexts": []
          },
          {
            "keyword": "vbr",
            "count": 9,
            "contexts": []
          },
          {
            "keyword": "index",
            "count": 6,
            "contexts": []
          },
          {
            "keyword": "entry",
            "count": 55,
            "contexts": []
          },
          {
            "keyword": "data",
            "count": 6,
            "contexts": []
          },
          {
            "keyword": "header",
            "count": 6,
            "contexts": []
          }
        ],
        "enums": [],
        "classes": [],
        "functions": [],
        "comments": [
          "This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild"
        ]
      },
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.cpp": {
        "file_name": "rekordbox_pdb.cpp",
        "file_type": ".cpp",
        "line_count": 1123,
        "size_bytes": 36356,
        "data_structures": [],
        "audio_keywords": [
          {
            "keyword": "tempo",
            "count": 1,
            "contexts": []
          },
          {
            "keyword": "sample",
            "count": 2,
            "contexts": []
          },
          {
            "keyword": "rate",
            "count": 3,
            "contexts": []
          },
          {
            "keyword": "key",
            "count": 10,
            "contexts": []
          },
          {
            "keyword": "cue",
            "count": 9,
            "contexts": []
          },
          {
            "keyword": "track",
            "count": 33,
            "contexts": []
          },
          {
            "keyword": "color",
            "count": 10,
            "contexts": []
          },
          {
            "keyword": "bitrate",
            "count": 1,
            "contexts": []
          },
          {
            "keyword": "index",
            "count": 17,
            "contexts": [
              "= io->pos();     io->seek((_root()->len_page() * index()));     m__raw_body = io->read_bytes(_root()->le"
            ]
          },
          {
            "keyword": "entry",
            "count": 18,
            "contexts": []
          },
          {
            "keyword": "data",
            "count": 8,
            "contexts": []
          }
        ],
        "enums": [],
        "classes": [],
        "functions": [],
        "comments": [
          "This is a generated file! Please edit source .ksy file and use kaitai-struct-compiler to rebuild"
        ]
      },
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy": {
        "file_name": "rekordbox_anlz.ksy",
        "file_type": ".ksy",
        "line_count": 630,
        "size_bytes": 18670,
        "data_structures": [],
        "audio_keywords": [
          {
            "keyword": "beat",
            "count": 42,
            "contexts": [
              "acilitate DJ performance. They include waveforms, beat grids   (information about the precise time at wh",
              "(information about the precise time at which each beat occurs),   time indices to allow efficient seekin",
              "type: u4         doc: |           The number of beat entries which follow.       - id: beats         t"
            ]
          },
          {
            "keyword": "tempo",
            "count": 3,
            "contexts": [
              "r position, the time at which they occur, and the tempo       at that point.     seq:       - type: u4",
              "re beat 1           is the down beat.       - id: tempo         type: u2         doc: |           The tem",
              "mpo         type: u2         doc: |           The tempo at the time of this beat, in beats per minute,"
            ]
          },
          {
            "keyword": "time",
            "count": 13,
            "contexts": [
              "orms, beat grids   (information about the precise time at which each beat occurs),   time indices to all",
              "ut the precise time at which each beat occurs),   time indices to allow efficient seeking to specific po",
              "he track, recording       their bar position, the time at which they occur, and the tempo       at that"
            ]
          },
          {
            "keyword": "grid",
            "count": 9,
            "contexts": [
              "r: num_beats         doc: The entries of the beat grid.    beat_grid_beat:     doc: |       Describes an",
              "c: |       Describes an individual beat in a beat grid.     seq:       - id: beat_number         type: u"
            ]
          },
          {
            "keyword": "analysis",
            "count": 4,
            "contexts": [
              "ta:   id: rekordbox_anlz   title: rekordbox track analysis file   application: rekordbox   file-extension:",
              "contents: \"PMAI\"     doc: Identifies this as an analysis file.   - id: len_header     type: u4     doc: |",
              "res the file path of the audio file to which this analysis       applies.     seq:       - id: len_path"
            ]
          },
          {
            "keyword": "waveform",
            "count": 11,
            "contexts": [
              "00    wave_preview_tag:     doc: |       Stores a waveform preview image suitable for display above       th",
              "doc: |           The actual bytes of the waveform preview.         if: _parent.len_tag > _parent.le",
              "der    wave_scroll_tag:     doc: |       A larger waveform image suitable for scrolling along as a track"
            ]
          },
          {
            "keyword": "rate",
            "count": 2,
            "contexts": [
              "eking to specific positions   inside variable bit-rate audio streams, and lists of memory cues   and loo"
            ]
          },
          {
            "keyword": "pitch",
            "count": 1,
            "contexts": [
              "en           the track is played at normal (100%) pitch.    cue_tag:     doc: |       Stores either a lis"
            ]
          },
          {
            "keyword": "cue",
            "count": 68,
            "contexts": [
              "pe: u2         doc: |           The length of the cue list.       - id: memory_count         type: u4",
              "t-expr: num_cues    cue_entry:     doc: |       A cue list entry. Can either represent a memory cue or",
              "A cue list entry. Can either represent a memory cue or a loop.     seq:       - id: magic         con"
            ]
          },
          {
            "keyword": "loop",
            "count": 25,
            "contexts": [
              "ate audio streams, and lists of memory cues   and loop points. They are used by Pioneer professional DJ",
              "Stores either a list of ordinary memory cues and loop points, or       a list of hot cues and loop poin",
              "and loop points, or       a list of hot cues and loop points.     seq:       - id: type         type: u"
            ]
          },
          {
            "keyword": "phrase",
            "count": 33,
            "contexts": [
              "ich rekordbox assigns the track as a whole during phrase analysis.       - size: 6       - id: end_beat",
              "oc: |           The beat number at which the last phrase ends. The track may           continue after the",
              ". The track may           continue after the last phrase ends. If this is the case, it will           most"
            ]
          },
          {
            "keyword": "structure",
            "count": 11,
            "contexts": [
              "g_structure_tag:     doc: |       Stores the song structure, also known as phrases (intro, verse,       bridg",
              "ody:     doc: |       Stores the rest of the song structure tag, which can only be       parsed after unmaski",
              "song_structure_entry:     doc: |       A song structure entry, represents a single phrase.     seq:"
            ]
          },
          {
            "keyword": "mood",
            "count": 25,
            "contexts": [
              "unmasked file.     -webide-representation: '{body.mood}'     song_structure_body:     doc: |       Store",
              "parsed after unmasking.     seq:       - id: mood         type: u2         enum: track_mood",
              "enum: track_mood         doc: |           The mood which rekordbox assigns the track as a whole duri"
            ]
          },
          {
            "keyword": "track",
            "count": 23,
            "contexts": [
              "meta:   id: rekordbox_anlz   title: rekordbox track analysis file   application: rekordbox   file-ext",
              "Holds a list of all the beats found within the track, recording       their bar position, the time at",
              "nds, at which this beat occurs when           the track is played at normal (100%) pitch.    cue_tag:"
            ]
          },
          {
            "keyword": "audio",
            "count": 4,
            "contexts": [
              "ese files are created by rekordbox when analyzing audio tracks   to facilitate DJ performance. They inclu",
              "to specific positions   inside variable bit-rate audio streams, and lists of memory cues   and loop poin",
              "tag:     doc: |       Stores the file path of the audio file to which this analysis       applies.     se"
            ]
          },
          {
            "keyword": "milliseconds",
            "count": 5,
            "contexts": [
              "type: u4         doc: |           The time, in milliseconds, at which this beat occurs when           the tra",
              "ype: u4         doc: |           The position, in milliseconds, at which the cue point lies           in the tra",
              "ype: u4         doc: |           The position, in milliseconds, at which the player loops           back to the"
            ]
          },
          {
            "keyword": "preview",
            "count": 13,
            "contexts": [
              "e_preview_tag:     doc: |       Stores a waveform preview image suitable for display above       the touch",
              "doc: |           The length, in bytes, of the preview data itself. This is           slightly redundant",
              "doc: |           The actual bytes of the waveform preview.         if: _parent.len_tag > _parent.len_header"
            ]
          },
          {
            "keyword": "scroll",
            "count": 10,
            "contexts": []
          },
          {
            "keyword": "color",
            "count": 25,
            "contexts": [
              "p points.) Also includes hot cues D through H and color assignment.     seq:       - id: type         typ",
              "ory cue or loop           and has been assigned a color.       - size: 7       - id: loop_numerator",
              "u1         doc: |           A lookup value for a color table? We use this to index to the hot cue colors"
            ]
          },
          {
            "keyword": "vbr",
            "count": 6,
            "contexts": [
              "# PQTZ             'section_tags::vbr': vbr_tag                                # PVBR",
              "05448: path                # PPTH     0x50564252: vbr                 # PVBR     0x5051545a: beat_grid"
            ]
          },
          {
            "keyword": "bitrate",
            "count": 1,
            "contexts": [
              "eking to particular times       within a variable-bitrate audio file.     seq:       - type: u4       - id:"
            ]
          },
          {
            "keyword": "index",
            "count": 4,
            "contexts": [
              "A lookup value for a color table? We use this to index to the hot cue colors shown in rekordbox.",
              ": '{path}'    vbr_tag:     doc: |       Stores an index allowing rapid seeking to particular times",
              "audio file.     seq:       - type: u4       - id: index         type: u4         repeat: expr         rep"
            ]
          },
          {
            "keyword": "entry",
            "count": 37,
            "contexts": [
              "um_cues    cue_entry:     doc: |       A cue list entry. Can either represent a memory cue or a loop.",
              "\"PCPT\"         doc: Identifies this as a cue list entry (cue point).       - id: len_header         type:",
              "ended_entry:     doc: |       A cue extended list entry. Can either describe a memory cue or a       loop"
            ]
          },
          {
            "keyword": "data",
            "count": 8,
            "contexts": [
              "|           The length, in bytes, of the preview data itself. This is           slightly redundant beca",
              "eems to always have the value 0x10000       - id: data         size: len_data         doc: |           T",
              "4         doc: |           The number of waveform data points, each of which takes one           byte."
            ]
          },
          {
            "keyword": "header",
            "count": 10,
            "contexts": [
              ": u4     doc: |       The number of bytes of this header section.   - id: len_file     type: u4     doc: |",
              "ified by a four-byte magic       sequence, with a header specifying its length, and whose payload       is",
              "doc: |           The size, in bytes, of the header portion of the tag.       - id: len_tag         t"
            ]
          }
        ],
        "enums": [],
        "classes": [],
        "functions": [],
        "comments": [
          "reverseengineering.stackexchange.com/questions/4311/help-reversing-a-edb-database-file-for-pioneers-rekordbox-software"
        ]
      },
      "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy": {
        "file_name": "rekordbox_pdb.ksy",
        "file_type": ".ksy",
        "line_count": 1025,
        "size_bytes": 33339,
        "data_structures": [],
        "audio_keywords": [
          {
            "keyword": "beat",
            "count": 2,
            "contexts": []
          },
          {
            "keyword": "tempo",
            "count": 2,
            "contexts": [
              "osition of the track within an album.       - id: tempo         type: u4         doc: |           The tem",
              "mpo         type: u4         doc: |           The tempo at the start of the track in beats per minute,"
            ]
          },
          {
            "keyword": "time",
            "count": 7,
            "contexts": [
              "title, artist,         genre, artwork ID, playing time, etc.     1:       id: genres       doc: |"
            ]
          },
          {
            "keyword": "analysis",
            "count": 2,
            "contexts": [
              "ub.com/Deep-Symmetry/crate-digger/blob/master/doc/Analysis.pdf  seq:   - type: u4     doc: |       Unknown p",
              "doc: |           The file path of the track analysis, which allows rapid           seeking to particul"
            ]
          },
          {
            "keyword": "waveform",
            "count": 1,
            "contexts": [
              "es,           jumping to particular beats, visual waveform previews, and           stores cue points and loo"
            ]
          },
          {
            "keyword": "sample",
            "count": 4,
            "contexts": [
              "type: u4         doc: |           Playback sample rate of the audio file.       - id: composer_id",
              "2         doc: |           The number of bits per sample of the audio file.       - id: duration         t"
            ]
          },
          {
            "keyword": "rate",
            "count": 11,
            "contexts": [
              "type: u4         doc: |           Playback sample rate of the audio file.       - id: composer_id",
              "type: u4         doc: |           Playback bit rate of the audio file.       - id: track_number",
              "seeking to particular times in variable bit-rate files,           jumping to particular beats, vis"
            ]
          },
          {
            "keyword": "key",
            "count": 12,
            "contexts": [
              "_row:     doc: |       A row that holds a musical key and the associated ID.     seq:       - id: id",
              ": |           The unique identifier by which this key can be requested           and linked from other",
              "|           The variable-length string naming the key.    label_row:     doc: |       A row that holds"
            ]
          },
          {
            "keyword": "cue",
            "count": 3,
            "contexts": [
              "s, visual waveform previews, and           stores cue points and loops.         -webide-parse-mode: eag"
            ]
          },
          {
            "keyword": "loop",
            "count": 1,
            "contexts": []
          },
          {
            "keyword": "structure",
            "count": 4,
            "contexts": [
              "scattered around it, and located using an index   structure that builds backwards from the end of the page. E",
              "page. Each row   of a given type has a fixed size structure which links to any   variable-sized strings by th",
              "ir offset, and       table pages have a row index structure which is built from the       end of the page bac"
            ]
          },
          {
            "keyword": "track",
            "count": 59,
            "contexts": [
              "doc: |           @flesniak said: \"a bitmask (1st track: 32)\"       - type: u1         doc: |           @",
              "try_row:     doc: |       A row that associates a track with a position in a playlist.     seq:       - i",
              "_id         type: u4         doc: |           The track found at this position in the playlist.       - i"
            ]
          },
          {
            "keyword": "audio",
            "count": 6,
            "contexts": [
              "doc: |           Playback sample rate of the audio file.       - id: composer_id         type: u4",
              "pe: u4         doc: |           The length of the audio file, in bytes.       - type: u4         doc: |",
              "doc: |           Playback bit rate of the audio file.       - id: track_number         type: u4"
            ]
          },
          {
            "keyword": "preview",
            "count": 1,
            "contexts": []
          },
          {
            "keyword": "color",
            "count": 11,
            "contexts": [
              "color_row:     doc: |       A row that holds a color name and the associated ID.     seq:       - size",
              ": |           The unique identifier by which this color can be requested           and linked from other",
              "|           The variable-length string naming the color.    genre_row:     doc: |       A row that holds"
            ]
          },
          {
            "keyword": "bitrate",
            "count": 1,
            "contexts": [
              "track has a           known remixer.       - id: bitrate         type: u4         doc: |           Playbac"
            ]
          },
          {
            "keyword": "index",
            "count": 36,
            "contexts": [
              "in the database, identifying their types and the index of   the first of the series of linked pages that",
              "ows are scattered around it, and located using an index   structure that builds backwards from the end of",
              "ed   by other data. There is a bit map in the row index that identifies   which rows are actually present"
            ]
          },
          {
            "keyword": "entry",
            "count": 11,
            "contexts": [
              "position within the playlist represented by this entry.       - id: track_id         type: u4         do",
              "doc: |           The playlist to which this entry belongs.    history_playlist_row:     doc: |",
              "c: |           The history playlist to which this entry belongs.       - id: entry_index         type: u4"
            ]
          },
          {
            "keyword": "data",
            "count": 13,
            "contexts": [
              "the heap that are too small to be used   by other data. There is a bit map in the row index that identif",
              "contain valid (or even necessarily well-formed)   data.    The majority of the work in reverse-engineeri",
              "to contains the start           of the meaningful data rows.       - id: last_page         type: page_re"
            ]
          },
          {
            "keyword": "header",
            "count": 9,
            "contexts": [
              "d into fixed-size blocks. The first block has a   header that establishes the block size, and lists the ta",
              "oss   any number of pages. The pages start with a header describing the   page and linking to the next pag",
              "ages containing rows of a single       type. This header describes the nature of the table and links to"
            ]
          }
        ],
        "enums": [],
        "classes": [],
        "functions": [],
        "comments": [
          "github.com/Deep-Symmetry/crate-digger/blob/master/doc/Analysis.pdf",
          "github.com/kaitai-io/kaitai_struct/issues/825 can be",
          "github.com/kaitai-io/kaitai_struct/issues/825 can be"
        ]
      }
    }
  },
  "data_structures": {},
  "audio_analysis_features": {},
  "beat_grid_analysis": {
    "beat_grid_structures": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "beat_grid_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed0"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed1"
            },
            {
              "type": "uint32_t",
              "name": "m_num_beats"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m__unnamed0"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "beat_grid_beat_t",
          "members": [
            {
              "type": "beat_grid_tag_t*",
              "name": "p__parent"
            },
            {
              "type": "uint16_t",
              "name": "m_beat_number"
            },
            {
              "type": "uint16_t",
              "name": "m_tempo"
            },
            {
              "type": "uint32_t",
              "name": "m_time"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "beat_grid_tag_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_beat_number"
            }
          ],
          "parent": "kaitai"
        }
      }
    ],
    "tempo_calculation": [],
    "beat_detection_algorithms": [],
    "time_indexing": [],
    "bpm_analysis": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "beat",
        "count": 2,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "tempo",
        "count": 4,
        "contexts": [
          "urn m_track_number; }          /**          * The tempo at the start of the track in beats per minute,",
          "* multiplied by 100.          */         uint32_t tempo() const { return m_tempo; }          /**"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "beat",
        "count": 71,
        "contexts": [
          "acilitate DJ performance. They include waveforms, beat grids  * (information about the precise time at w",
          "(information about the precise time at which each beat occurs),  * time indices to allow efficient seeki",
          "unnamed1; }          /**          * The number of beat entries which follow.          */         uint32_"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "tempo",
        "count": 5,
        "contexts": [
          "r position, the time at which they occur, and the tempo      * at that point.      */      class beat_gri",
          "turn m_beat_number; }          /**          * The tempo at the time of this beat, in beats per minute,",
          "* multiplied by 100.          */         uint16_t tempo() const { return m_tempo; }          /**"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "grid",
        "count": 17,
        "contexts": [
          "}          /**          * The entries of the beat grid.          */         std::vector<std::unique_ptr<",
          "/**      * Describes an individual beat in a beat grid.      */      class beat_grid_beat_t : public kai"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "beat",
        "count": 44,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "tempo",
        "count": 1,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "grid",
        "count": 20,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.cpp",
        "keyword": "tempo",
        "count": 1,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "beat",
        "count": 42,
        "contexts": [
          "acilitate DJ performance. They include waveforms, beat grids   (information about the precise time at wh",
          "(information about the precise time at which each beat occurs),   time indices to allow efficient seekin",
          "type: u4         doc: |           The number of beat entries which follow.       - id: beats         t"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "tempo",
        "count": 3,
        "contexts": [
          "r position, the time at which they occur, and the tempo       at that point.     seq:       - type: u4",
          "re beat 1           is the down beat.       - id: tempo         type: u2         doc: |           The tem",
          "mpo         type: u2         doc: |           The tempo at the time of this beat, in beats per minute,"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "grid",
        "count": 9,
        "contexts": [
          "r: num_beats         doc: The entries of the beat grid.    beat_grid_beat:     doc: |       Describes an",
          "c: |       Describes an individual beat in a beat grid.     seq:       - id: beat_number         type: u"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "beat",
        "count": 2,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "tempo",
        "count": 2,
        "contexts": [
          "osition of the track within an album.       - id: tempo         type: u4         doc: |           The tem",
          "mpo         type: u4         doc: |           The tempo at the start of the track in beats per minute,"
        ]
      }
    ]
  },
  "waveform_analysis": {
    "waveform_structures": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "structure": {
          "type": "class",
          "name": "color_row_t",
          "members": [
            {
              "type": "row_ref_t*",
              "name": "p__parent"
            },
            {
              "type": "string",
              "name": "m__unnamed0"
            },
            {
              "type": "uint16_t",
              "name": "m_id"
            },
            {
              "type": "uint8_t",
              "name": "m__unnamed2"
            },
            {
              "type": "rekordbox_pdb_t*",
              "name": "m__root"
            },
            {
              "type": "row_ref_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m__unnamed0"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "wave_preview_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_data"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed1"
            },
            {
              "type": "string",
              "name": "m_data"
            },
            {
              "type": "bool",
              "name": "n_data"
            },
            {
              "type": "return",
              "name": "n_data"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "wave_color_preview_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry_bytes"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entries"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed2"
            },
            {
              "type": "string",
              "name": "m_entries"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_len_entry_bytes"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "wave_scroll_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry_bytes"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entries"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed2"
            },
            {
              "type": "string",
              "name": "m_entries"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_len_entry_bytes"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "wave_color_scroll_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry_bytes"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entries"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed2"
            },
            {
              "type": "string",
              "name": "m_entries"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_len_entry_bytes"
            }
          ],
          "parent": "kaitai"
        }
      }
    ],
    "color_waveforms": [],
    "preview_generation": [],
    "scroll_waveforms": [],
    "visualization_algorithms": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "waveform",
        "count": 1,
        "contexts": [
          "s,          * jumping to particular beats, visual waveform previews, and          * stores cue points and lo"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "preview",
        "count": 1,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "color",
        "count": 13,
        "contexts": [
          "rent; }     };      /**      * A row that holds a color name and the associated ID.      */      class co",
          "**          * The unique identifier by which this color can be requested          * and linked from other",
          "* The variable-length string naming the color.          */         device_sql_string_t* name()"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "entry",
        "count": 19,
        "contexts": [
          "/**          * The history playlist to which this entry belongs.          */         uint32_t playlist_id",
          "position within the playlist represented by this entry.          */         uint32_t entry_index() const",
          "position within the playlist represented by this entry.          */         uint32_t entry_index() const"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "waveform",
        "count": 11,
        "contexts": [
          "turn m__parent; }     };      /**      * Stores a waveform preview image suitable for display above      * t",
          "}          /**          * The actual bytes of the waveform preview.          */         std::string data() c",
          "rent; }     };      /**      * A larger, colorful waveform preview image suitable for display      * above t"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "preview",
        "count": 14,
        "contexts": [
          "arent; }     };      /**      * Stores a waveform preview image suitable for display above      * the touch",
          "/**          * The length, in bytes, of the preview data itself. This is          * slightly redundan",
          "/**          * The actual bytes of the waveform preview.          */         std::string data() const { r"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "scroll",
        "count": 12,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "color",
        "count": 52,
        "contexts": [
          "ry cue or loop          * and has been assigned a color.          */         uint8_t color_id() const { r",
          "t; }          /**          * A lookup value for a color table? We use this to index to the hot cue colors",
          "/**          * The red component of the hot cue color to be displayed.          */         uint8_t colo"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "entry",
        "count": 67,
        "contexts": [
          "public:          /**          * The size of each entry, in bytes. Seems to always be 6.          */",
          "public:          /**          * The size of each entry, in bytes. Seems to always be 1.          */",
          "public:          /**          * The size of each entry, in bytes. Seems to always be 24.          */"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "preview",
        "count": 20,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "scroll",
        "count": 18,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "color",
        "count": 35,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "entry",
        "count": 55,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.cpp",
        "keyword": "color",
        "count": 10,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.cpp",
        "keyword": "entry",
        "count": 18,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "waveform",
        "count": 11,
        "contexts": [
          "00    wave_preview_tag:     doc: |       Stores a waveform preview image suitable for display above       th",
          "doc: |           The actual bytes of the waveform preview.         if: _parent.len_tag > _parent.le",
          "der    wave_scroll_tag:     doc: |       A larger waveform image suitable for scrolling along as a track"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "preview",
        "count": 13,
        "contexts": [
          "e_preview_tag:     doc: |       Stores a waveform preview image suitable for display above       the touch",
          "doc: |           The length, in bytes, of the preview data itself. This is           slightly redundant",
          "doc: |           The actual bytes of the waveform preview.         if: _parent.len_tag > _parent.len_header"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "scroll",
        "count": 10,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "color",
        "count": 25,
        "contexts": [
          "p points.) Also includes hot cues D through H and color assignment.     seq:       - id: type         typ",
          "ory cue or loop           and has been assigned a color.       - size: 7       - id: loop_numerator",
          "u1         doc: |           A lookup value for a color table? We use this to index to the hot cue colors"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "entry",
        "count": 37,
        "contexts": [
          "um_cues    cue_entry:     doc: |       A cue list entry. Can either represent a memory cue or a loop.",
          "\"PCPT\"         doc: Identifies this as a cue list entry (cue point).       - id: len_header         type:",
          "ended_entry:     doc: |       A cue extended list entry. Can either describe a memory cue or a       loop"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "waveform",
        "count": 1,
        "contexts": [
          "es,           jumping to particular beats, visual waveform previews, and           stores cue points and loo"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "preview",
        "count": 1,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "color",
        "count": 11,
        "contexts": [
          "color_row:     doc: |       A row that holds a color name and the associated ID.     seq:       - size",
          ": |           The unique identifier by which this color can be requested           and linked from other",
          "|           The variable-length string naming the color.    genre_row:     doc: |       A row that holds"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "entry",
        "count": 11,
        "contexts": [
          "position within the playlist represented by this entry.       - id: track_id         type: u4         do",
          "doc: |           The playlist to which this entry belongs.    history_playlist_row:     doc: |",
          "c: |           The history playlist to which this entry belongs.       - id: entry_index         type: u4"
        ]
      }
    ]
  },
  "cue_point_management": {
    "cue_structures": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "cue_extended_entry_t",
          "members": [
            {
              "type": "cue_extended_tag_t*",
              "name": "p__parent"
            },
            {
              "type": "string",
              "name": "m_magic"
            },
            {
              "type": "uint32_t",
              "name": "m_len_header"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry"
            },
            {
              "type": "uint32_t",
              "name": "m_hot_cue"
            },
            {
              "type": "cue_entry_type_t",
              "name": "m_type"
            },
            {
              "type": "string",
              "name": "m__unnamed5"
            },
            {
              "type": "uint32_t",
              "name": "m_time"
            },
            {
              "type": "uint32_t",
              "name": "m_loop_time"
            },
            {
              "type": "uint8_t",
              "name": "m_color_id"
            },
            {
              "type": "string",
              "name": "m__unnamed9"
            },
            {
              "type": "uint16_t",
              "name": "m_loop_numerator"
            },
            {
              "type": "uint16_t",
              "name": "m_loop_denominator"
            },
            {
              "type": "uint32_t",
              "name": "m_len_comment"
            },
            {
              "type": "bool",
              "name": "n_len_comment"
            },
            {
              "type": "return",
              "name": "n_len_comment"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "cue_entry_t",
          "members": [
            {
              "type": "cue_tag_t*",
              "name": "p__parent"
            },
            {
              "type": "string",
              "name": "m_magic"
            },
            {
              "type": "uint32_t",
              "name": "m_len_header"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry"
            },
            {
              "type": "uint32_t",
              "name": "m_hot_cue"
            },
            {
              "type": "cue_entry_status_t",
              "name": "m_status"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed5"
            },
            {
              "type": "uint16_t",
              "name": "m_order_first"
            },
            {
              "type": "uint16_t",
              "name": "m_order_last"
            },
            {
              "type": "cue_entry_type_t",
              "name": "m_type"
            },
            {
              "type": "string",
              "name": "m__unnamed9"
            },
            {
              "type": "uint32_t",
              "name": "m_time"
            },
            {
              "type": "uint32_t",
              "name": "m_loop_time"
            },
            {
              "type": "string",
              "name": "m__unnamed12"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "cue_tag_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_magic"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "cue_extended_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "cue_list_type_t",
              "name": "m_type"
            },
            {
              "type": "uint16_t",
              "name": "m_num_cues"
            },
            {
              "type": "string",
              "name": "m__unnamed2"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_type"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "cue_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "cue_list_type_t",
              "name": "m_type"
            },
            {
              "type": "string",
              "name": "m__unnamed1"
            },
            {
              "type": "uint16_t",
              "name": "m_num_cues"
            },
            {
              "type": "uint32_t",
              "name": "m_memory_count"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_type"
            }
          ],
          "parent": "kaitai"
        }
      }
    ],
    "loop_management": [],
    "hot_cues": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "enum": {
          "name": "page_type_t",
          "values": [
            {
              "name": "PAGE_TYPE_TRACKS",
              "value": "0"
            },
            {
              "name": "PAGE_TYPE_GENRES",
              "value": "1"
            },
            {
              "name": "PAGE_TYPE_ARTISTS",
              "value": "2"
            },
            {
              "name": "PAGE_TYPE_ALBUMS",
              "value": "3"
            },
            {
              "name": "PAGE_TYPE_LABELS",
              "value": "4"
            },
            {
              "name": "PAGE_TYPE_KEYS",
              "value": "5"
            },
            {
              "name": "PAGE_TYPE_COLORS",
              "value": "6"
            },
            {
              "name": "PAGE_TYPE_PLAYLIST_TREE",
              "value": "7"
            },
            {
              "name": "PAGE_TYPE_PLAYLIST_ENTRIES",
              "value": "8"
            },
            {
              "name": "PAGE_TYPE_UNKNOWN_9",
              "value": "9"
            },
            {
              "name": "PAGE_TYPE_UNKNOWN_10",
              "value": "10"
            },
            {
              "name": "PAGE_TYPE_HISTORY_PLAYLISTS",
              "value": "11"
            },
            {
              "name": "PAGE_TYPE_HISTORY_ENTRIES",
              "value": "12"
            },
            {
              "name": "PAGE_TYPE_ARTWORK",
              "value": "13"
            },
            {
              "name": "PAGE_TYPE_UNKNOWN_14",
              "value": "14"
            },
            {
              "name": "PAGE_TYPE_UNKNOWN_15",
              "value": "15"
            },
            {
              "name": "PAGE_TYPE_COLUMNS",
              "value": "16"
            },
            {
              "name": "PAGE_TYPE_UNKNOWN_17",
              "value": "17"
            },
            {
              "name": "PAGE_TYPE_UNKNOWN_18",
              "value": "18"
            },
            {
              "name": "PAGE_TYPE_HISTORY",
              "value": "19"
            }
          ]
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "cue_entry_status_t",
          "values": [
            {
              "name": "CUE_ENTRY_STATUS_DISABLED",
              "value": "0"
            },
            {
              "name": "CUE_ENTRY_STATUS_ENABLED",
              "value": "1"
            },
            {
              "name": "CUE_ENTRY_STATUS_ACTIVE_LOOP",
              "value": "4"
            }
          ]
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "cue_list_type_t",
          "values": [
            {
              "name": "CUE_LIST_TYPE_MEMORY_CUES",
              "value": "0"
            },
            {
              "name": "CUE_LIST_TYPE_HOT_CUES",
              "value": "1"
            }
          ]
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "cue_entry_type_t",
          "values": [
            {
              "name": "CUE_ENTRY_TYPE_MEMORY_CUE",
              "value": "1"
            },
            {
              "name": "CUE_ENTRY_TYPE_LOOP",
              "value": "2"
            }
          ]
        }
      }
    ],
    "memory_cues": [],
    "color_coding": [],
    "time_positioning": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "time",
        "count": 6,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "cue",
        "count": 5,
        "contexts": [
          ", visual waveform previews, and          * stores cue points and loops.          */         device_sql_"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "loop",
        "count": 1,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "color",
        "count": 13,
        "contexts": [
          "rent; }     };      /**      * A row that holds a color name and the associated ID.      */      class co",
          "**          * The unique identifier by which this color can be requested          * and linked from other",
          "* The variable-length string naming the color.          */         device_sql_string_t* name()"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "time",
        "count": 23,
        "contexts": [
          "rms, beat grids  * (information about the precise time at which each beat occurs),  * time indices to al",
          "t the precise time at which each beat occurs),  * time indices to allow efficient seeking to specific po",
          "e track, recording      * their bar position, the time at which they occur, and the tempo      * at that"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "cue",
        "count": 106,
        "contexts": [
          "m__io__raw_body.get(); }     };      /**      * A cue extended list entry. Can either describe a memory",
          "extended list entry. Can either describe a memory cue or a      * loop.      */      class cue_extended",
          "/**          * Identifies this as an extended cue list entry (cue point).          */         std::"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "loop",
        "count": 33,
        "contexts": [
          "te audio streams, and lists of memory cues  * and loop points. They are used by Pioneer professional DJ",
          "try. Can either describe a memory cue or a      * loop.      */      class cue_extended_entry_t : public",
          "ndicates whether this is a regular cue point or a loop.          */         cue_entry_type_t type() cons"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "color",
        "count": 52,
        "contexts": [
          "ry cue or loop          * and has been assigned a color.          */         uint8_t color_id() const { r",
          "t; }          /**          * A lookup value for a color table? We use this to index to the hot cue colors",
          "/**          * The red component of the hot cue color to be displayed.          */         uint8_t colo"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "time",
        "count": 5,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "cue",
        "count": 63,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "loop",
        "count": 4,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "color",
        "count": 35,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.cpp",
        "keyword": "cue",
        "count": 9,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.cpp",
        "keyword": "color",
        "count": 10,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "time",
        "count": 13,
        "contexts": [
          "orms, beat grids   (information about the precise time at which each beat occurs),   time indices to all",
          "ut the precise time at which each beat occurs),   time indices to allow efficient seeking to specific po",
          "he track, recording       their bar position, the time at which they occur, and the tempo       at that"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "cue",
        "count": 68,
        "contexts": [
          "pe: u2         doc: |           The length of the cue list.       - id: memory_count         type: u4",
          "t-expr: num_cues    cue_entry:     doc: |       A cue list entry. Can either represent a memory cue or",
          "A cue list entry. Can either represent a memory cue or a loop.     seq:       - id: magic         con"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "loop",
        "count": 25,
        "contexts": [
          "ate audio streams, and lists of memory cues   and loop points. They are used by Pioneer professional DJ",
          "Stores either a list of ordinary memory cues and loop points, or       a list of hot cues and loop poin",
          "and loop points, or       a list of hot cues and loop points.     seq:       - id: type         type: u"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "color",
        "count": 25,
        "contexts": [
          "p points.) Also includes hot cues D through H and color assignment.     seq:       - id: type         typ",
          "ory cue or loop           and has been assigned a color.       - size: 7       - id: loop_numerator",
          "u1         doc: |           A lookup value for a color table? We use this to index to the hot cue colors"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "time",
        "count": 7,
        "contexts": [
          "title, artist,         genre, artwork ID, playing time, etc.     1:       id: genres       doc: |"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "cue",
        "count": 3,
        "contexts": [
          "s, visual waveform previews, and           stores cue points and loops.         -webide-parse-mode: eag"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "loop",
        "count": 1,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "color",
        "count": 11,
        "contexts": [
          "color_row:     doc: |       A row that holds a color name and the associated ID.     seq:       - size",
          ": |           The unique identifier by which this color can be requested           and linked from other",
          "|           The variable-length string naming the color.    genre_row:     doc: |       A row that holds"
        ]
      }
    ]
  },
  "song_structure_analysis": {
    "phrase_analysis": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "phrase_mid_t",
          "members": [
            {
              "type": "song_structure_entry_t*",
              "name": "p__parent"
            },
            {
              "type": "mood_mid_phrase_t",
              "name": "m_id"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "song_structure_entry_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_id"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "song_structure_body_t",
          "members": [
            {
              "type": "song_structure_tag_t*",
              "name": "p__parent"
            },
            {
              "type": "track_mood_t",
              "name": "m_mood"
            },
            {
              "type": "string",
              "name": "m__unnamed1"
            },
            {
              "type": "uint16_t",
              "name": "m_end_beat"
            },
            {
              "type": "string",
              "name": "m__unnamed3"
            },
            {
              "type": "track_bank_t",
              "name": "m_bank"
            },
            {
              "type": "string",
              "name": "m__unnamed5"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "song_structure_tag_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_mood"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "phrase_high_t",
          "members": [
            {
              "type": "song_structure_entry_t*",
              "name": "p__parent"
            },
            {
              "type": "mood_high_phrase_t",
              "name": "m_id"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "song_structure_entry_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_id"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "song_structure_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "bool",
              "name": "f_c"
            },
            {
              "type": "uint16_t",
              "name": "m_c"
            },
            {
              "type": "bool",
              "name": "f_raw_mood"
            },
            {
              "type": "uint16_t",
              "name": "m_raw_mood"
            },
            {
              "type": "bool",
              "name": "f_is_masked"
            },
            {
              "type": "bool",
              "name": "m_is_masked"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry_bytes"
            },
            {
              "type": "uint16_t",
              "name": "m_len_entries"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "string",
              "name": "m__raw_body"
            },
            {
              "type": "return",
              "name": "m_len_entry_bytes"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "song_structure_entry_t",
          "members": [
            {
              "type": "song_structure_body_t*",
              "name": "p__parent"
            },
            {
              "type": "uint16_t",
              "name": "m_index"
            },
            {
              "type": "uint16_t",
              "name": "m_beat"
            },
            {
              "type": "string",
              "name": "m__unnamed3"
            },
            {
              "type": "uint8_t",
              "name": "m_k1"
            },
            {
              "type": "string",
              "name": "m__unnamed5"
            },
            {
              "type": "uint8_t",
              "name": "m_k2"
            },
            {
              "type": "string",
              "name": "m__unnamed7"
            },
            {
              "type": "uint8_t",
              "name": "m_b"
            },
            {
              "type": "uint16_t",
              "name": "m_beat2"
            },
            {
              "type": "uint16_t",
              "name": "m_beat3"
            },
            {
              "type": "uint16_t",
              "name": "m_beat4"
            },
            {
              "type": "string",
              "name": "m__unnamed12"
            },
            {
              "type": "uint8_t",
              "name": "m_k3"
            },
            {
              "type": "string",
              "name": "m__unnamed14"
            },
            {
              "type": "uint8_t",
              "name": "m_fill"
            },
            {
              "type": "uint16_t",
              "name": "m_beat_fill"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "song_structure_body_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_index"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "phrase_low_t",
          "members": [
            {
              "type": "song_structure_entry_t*",
              "name": "p__parent"
            },
            {
              "type": "mood_low_phrase_t",
              "name": "m_id"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "song_structure_entry_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_id"
            }
          ],
          "parent": "kaitai"
        }
      }
    ],
    "mood_detection": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "mood_high_phrase_t",
          "values": [
            {
              "name": "MOOD_HIGH_PHRASE_INTRO",
              "value": "1"
            },
            {
              "name": "MOOD_HIGH_PHRASE_UP",
              "value": "2"
            },
            {
              "name": "MOOD_HIGH_PHRASE_DOWN",
              "value": "3"
            },
            {
              "name": "MOOD_HIGH_PHRASE_CHORUS",
              "value": "5"
            },
            {
              "name": "MOOD_HIGH_PHRASE_OUTRO",
              "value": "6"
            }
          ]
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "track_bank_t",
          "values": [
            {
              "name": "TRACK_BANK_DEFAULT",
              "value": "0"
            },
            {
              "name": "TRACK_BANK_COOL",
              "value": "1"
            },
            {
              "name": "TRACK_BANK_NATURAL",
              "value": "2"
            },
            {
              "name": "TRACK_BANK_HOT",
              "value": "3"
            },
            {
              "name": "TRACK_BANK_SUBTLE",
              "value": "4"
            },
            {
              "name": "TRACK_BANK_WARM",
              "value": "5"
            },
            {
              "name": "TRACK_BANK_VIVID",
              "value": "6"
            },
            {
              "name": "TRACK_BANK_CLUB_1",
              "value": "7"
            },
            {
              "name": "TRACK_BANK_CLUB_2",
              "value": "8"
            }
          ]
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "track_mood_t",
          "values": [
            {
              "name": "TRACK_MOOD_HIGH",
              "value": "1"
            },
            {
              "name": "TRACK_MOOD_MID",
              "value": "2"
            },
            {
              "name": "TRACK_MOOD_LOW",
              "value": "3"
            }
          ]
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "mood_mid_phrase_t",
          "values": [
            {
              "name": "MOOD_MID_PHRASE_INTRO",
              "value": "1"
            },
            {
              "name": "MOOD_MID_PHRASE_VERSE_1",
              "value": "2"
            },
            {
              "name": "MOOD_MID_PHRASE_VERSE_2",
              "value": "3"
            },
            {
              "name": "MOOD_MID_PHRASE_VERSE_3",
              "value": "4"
            },
            {
              "name": "MOOD_MID_PHRASE_VERSE_4",
              "value": "5"
            },
            {
              "name": "MOOD_MID_PHRASE_VERSE_5",
              "value": "6"
            },
            {
              "name": "MOOD_MID_PHRASE_VERSE_6",
              "value": "7"
            },
            {
              "name": "MOOD_MID_PHRASE_BRIDGE",
              "value": "8"
            },
            {
              "name": "MOOD_MID_PHRASE_CHORUS",
              "value": "9"
            },
            {
              "name": "MOOD_MID_PHRASE_OUTRO",
              "value": "10"
            }
          ]
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "mood_low_phrase_t",
          "values": [
            {
              "name": "MOOD_LOW_PHRASE_INTRO",
              "value": "1"
            },
            {
              "name": "MOOD_LOW_PHRASE_VERSE_1",
              "value": "2"
            },
            {
              "name": "MOOD_LOW_PHRASE_VERSE_1B",
              "value": "3"
            },
            {
              "name": "MOOD_LOW_PHRASE_VERSE_1C",
              "value": "4"
            },
            {
              "name": "MOOD_LOW_PHRASE_VERSE_2",
              "value": "5"
            },
            {
              "name": "MOOD_LOW_PHRASE_VERSE_2B",
              "value": "6"
            },
            {
              "name": "MOOD_LOW_PHRASE_VERSE_2C",
              "value": "7"
            },
            {
              "name": "MOOD_LOW_PHRASE_BRIDGE",
              "value": "8"
            },
            {
              "name": "MOOD_LOW_PHRASE_CHORUS",
              "value": "9"
            },
            {
              "name": "MOOD_LOW_PHRASE_OUTRO",
              "value": "10"
            }
          ]
        }
      }
    ],
    "song_sections": [],
    "structural_patterns": [],
    "energy_analysis": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "structure",
        "count": 3,
        "contexts": [
          "cattered around it, and located using an index  * structure that builds backwards from the end of the page. E",
          "age. Each row  * of a given type has a fixed size structure which links to any  * variable-sized strings by t",
          "r offset, and      * table pages have a row index structure which is built from the      * end of the page ba"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "keyword": "track",
        "count": 57,
        "contexts": [
          "story playlist ID and name, linking to      * the track IDs captured during a performance on the player.",
          "/**          * @flesniak said: \"a bitmask (1st track: 32)\"          */         uint8_t _unnamed7() con",
          "}     };      /**      * A row that associates a track with a position in a history playlist.      */"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "phrase",
        "count": 66,
        "contexts": [
          "ich rekordbox assigns the track as a whole during phrase analysis.          */         track_mood_t mood()",
          "/**          * The beat number at which the last phrase ends. The track may          * continue after the",
          "The track may          * continue after the last phrase ends. If this is the case, it will          * mos"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "structure",
        "count": 35,
        "contexts": [
          "};      /**      * Stores the rest of the song structure tag, which can only be      * parsed after unmask",
          "_parent; }     };      /**      * Stores the song structure, also known as phrases (intro, verse,      * brid",
          "return m__parent; }     };      /**      * A song structure entry, represents a single phrase.      */      c"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "mood",
        "count": 54,
        "contexts": [
          "_parent;      public:          /**          * The mood which rekordbox assigns the track as a whole duri",
          "phrase analysis.          */         track_mood_t mood() const { return m_mood; }         std::string _u",
          "flags that identify phrase kind variants in high-mood tracks.          */         uint8_t k1() const {"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "keyword": "track",
        "count": 33,
        "contexts": [
          "lay above      * the touch strip for jumping to a track position.      */      class wave_preview_tag_t :",
          "* Holds a list of all the beats found within the track, recording      * their bar position, the time at",
          "*          * The mood which rekordbox assigns the track as a whole during phrase analysis.          */"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "phrase",
        "count": 29,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "structure",
        "count": 35,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "mood",
        "count": 18,
        "contexts": [
          "beat = m__io->read_u2be();     switch (_parent()->mood()) {     case rekordbox_anlz_t::TRACK_MOOD_HIGH:"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.cpp",
        "keyword": "track",
        "count": 5,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.cpp",
        "keyword": "track",
        "count": 33,
        "contexts": []
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "phrase",
        "count": 33,
        "contexts": [
          "ich rekordbox assigns the track as a whole during phrase analysis.       - size: 6       - id: end_beat",
          "oc: |           The beat number at which the last phrase ends. The track may           continue after the",
          ". The track may           continue after the last phrase ends. If this is the case, it will           most"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "structure",
        "count": 11,
        "contexts": [
          "g_structure_tag:     doc: |       Stores the song structure, also known as phrases (intro, verse,       bridg",
          "ody:     doc: |       Stores the rest of the song structure tag, which can only be       parsed after unmaski",
          "song_structure_entry:     doc: |       A song structure entry, represents a single phrase.     seq:"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "mood",
        "count": 25,
        "contexts": [
          "unmasked file.     -webide-representation: '{body.mood}'     song_structure_body:     doc: |       Store",
          "parsed after unmasking.     seq:       - id: mood         type: u2         enum: track_mood",
          "enum: track_mood         doc: |           The mood which rekordbox assigns the track as a whole duri"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.ksy",
        "keyword": "track",
        "count": 23,
        "contexts": [
          "meta:   id: rekordbox_anlz   title: rekordbox track analysis file   application: rekordbox   file-ext",
          "Holds a list of all the beats found within the track, recording       their bar position, the time at",
          "nds, at which this beat occurs when           the track is played at normal (100%) pitch.    cue_tag:"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "structure",
        "count": 4,
        "contexts": [
          "scattered around it, and located using an index   structure that builds backwards from the end of the page. E",
          "page. Each row   of a given type has a fixed size structure which links to any   variable-sized strings by th",
          "ir offset, and       table pages have a row index structure which is built from the       end of the page bac"
        ]
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.ksy",
        "keyword": "track",
        "count": 59,
        "contexts": [
          "doc: |           @flesniak said: \"a bitmask (1st track: 32)\"       - type: u1         doc: |           @",
          "try_row:     doc: |       A row that associates a track with a position in a playlist.     seq:       - i",
          "_id         type: u4         doc: |           The track found at this position in the playlist.       - i"
        ]
      }
    ]
  },
  "metadata_formats": {
    "file_structure": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "structure": {
          "type": "class",
          "name": "history_entry_row_t",
          "members": [
            {
              "type": "row_ref_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_track_id"
            },
            {
              "type": "uint32_t",
              "name": "m_playlist_id"
            },
            {
              "type": "uint32_t",
              "name": "m_entry_index"
            },
            {
              "type": "rekordbox_pdb_t*",
              "name": "m__root"
            },
            {
              "type": "row_ref_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_track_id"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_pdb.h",
        "structure": {
          "type": "class",
          "name": "playlist_entry_row_t",
          "members": [
            {
              "type": "row_ref_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_entry_index"
            },
            {
              "type": "uint32_t",
              "name": "m_track_id"
            },
            {
              "type": "uint32_t",
              "name": "m_playlist_id"
            },
            {
              "type": "rekordbox_pdb_t*",
              "name": "m__root"
            },
            {
              "type": "row_ref_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_entry_index"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "path_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_path"
            },
            {
              "type": "string",
              "name": "m_path"
            },
            {
              "type": "bool",
              "name": "n_path"
            },
            {
              "type": "return",
              "name": "n_path"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "wave_preview_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_data"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed1"
            },
            {
              "type": "string",
              "name": "m_data"
            },
            {
              "type": "bool",
              "name": "n_data"
            },
            {
              "type": "return",
              "name": "n_data"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "beat_grid_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed0"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed1"
            },
            {
              "type": "uint32_t",
              "name": "m_num_beats"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m__unnamed0"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "wave_color_preview_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry_bytes"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entries"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed2"
            },
            {
              "type": "string",
              "name": "m_entries"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_len_entry_bytes"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "wave_scroll_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry_bytes"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entries"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed2"
            },
            {
              "type": "string",
              "name": "m_entries"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_len_entry_bytes"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "song_structure_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "bool",
              "name": "f_c"
            },
            {
              "type": "uint16_t",
              "name": "m_c"
            },
            {
              "type": "bool",
              "name": "f_raw_mood"
            },
            {
              "type": "uint16_t",
              "name": "m_raw_mood"
            },
            {
              "type": "bool",
              "name": "f_is_masked"
            },
            {
              "type": "bool",
              "name": "m_is_masked"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry_bytes"
            },
            {
              "type": "uint16_t",
              "name": "m_len_entries"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "string",
              "name": "m__raw_body"
            },
            {
              "type": "return",
              "name": "m_len_entry_bytes"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "cue_extended_entry_t",
          "members": [
            {
              "type": "cue_extended_tag_t*",
              "name": "p__parent"
            },
            {
              "type": "string",
              "name": "m_magic"
            },
            {
              "type": "uint32_t",
              "name": "m_len_header"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry"
            },
            {
              "type": "uint32_t",
              "name": "m_hot_cue"
            },
            {
              "type": "cue_entry_type_t",
              "name": "m_type"
            },
            {
              "type": "string",
              "name": "m__unnamed5"
            },
            {
              "type": "uint32_t",
              "name": "m_time"
            },
            {
              "type": "uint32_t",
              "name": "m_loop_time"
            },
            {
              "type": "uint8_t",
              "name": "m_color_id"
            },
            {
              "type": "string",
              "name": "m__unnamed9"
            },
            {
              "type": "uint16_t",
              "name": "m_loop_numerator"
            },
            {
              "type": "uint16_t",
              "name": "m_loop_denominator"
            },
            {
              "type": "uint32_t",
              "name": "m_len_comment"
            },
            {
              "type": "bool",
              "name": "n_len_comment"
            },
            {
              "type": "return",
              "name": "n_len_comment"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "vbr_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed0"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m__unnamed0"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "song_structure_entry_t",
          "members": [
            {
              "type": "song_structure_body_t*",
              "name": "p__parent"
            },
            {
              "type": "uint16_t",
              "name": "m_index"
            },
            {
              "type": "uint16_t",
              "name": "m_beat"
            },
            {
              "type": "string",
              "name": "m__unnamed3"
            },
            {
              "type": "uint8_t",
              "name": "m_k1"
            },
            {
              "type": "string",
              "name": "m__unnamed5"
            },
            {
              "type": "uint8_t",
              "name": "m_k2"
            },
            {
              "type": "string",
              "name": "m__unnamed7"
            },
            {
              "type": "uint8_t",
              "name": "m_b"
            },
            {
              "type": "uint16_t",
              "name": "m_beat2"
            },
            {
              "type": "uint16_t",
              "name": "m_beat3"
            },
            {
              "type": "uint16_t",
              "name": "m_beat4"
            },
            {
              "type": "string",
              "name": "m__unnamed12"
            },
            {
              "type": "uint8_t",
              "name": "m_k3"
            },
            {
              "type": "string",
              "name": "m__unnamed14"
            },
            {
              "type": "uint8_t",
              "name": "m_fill"
            },
            {
              "type": "uint16_t",
              "name": "m_beat_fill"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "song_structure_body_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_index"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "cue_entry_t",
          "members": [
            {
              "type": "cue_tag_t*",
              "name": "p__parent"
            },
            {
              "type": "string",
              "name": "m_magic"
            },
            {
              "type": "uint32_t",
              "name": "m_len_header"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry"
            },
            {
              "type": "uint32_t",
              "name": "m_hot_cue"
            },
            {
              "type": "cue_entry_status_t",
              "name": "m_status"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed5"
            },
            {
              "type": "uint16_t",
              "name": "m_order_first"
            },
            {
              "type": "uint16_t",
              "name": "m_order_last"
            },
            {
              "type": "cue_entry_type_t",
              "name": "m_type"
            },
            {
              "type": "string",
              "name": "m__unnamed9"
            },
            {
              "type": "uint32_t",
              "name": "m_time"
            },
            {
              "type": "uint32_t",
              "name": "m_loop_time"
            },
            {
              "type": "string",
              "name": "m__unnamed12"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "cue_tag_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_magic"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "cue_extended_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "cue_list_type_t",
              "name": "m_type"
            },
            {
              "type": "uint16_t",
              "name": "m_num_cues"
            },
            {
              "type": "string",
              "name": "m__unnamed2"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_type"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "unknown_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m__root"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "tagged_section_t",
          "members": [
            {
              "type": "rekordbox_anlz_t*",
              "name": "p__parent"
            },
            {
              "type": "section_tags_t",
              "name": "m_fourcc"
            },
            {
              "type": "uint32_t",
              "name": "m_len_header"
            },
            {
              "type": "uint32_t",
              "name": "m_len_tag"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__parent"
            },
            {
              "type": "string",
              "name": "m__raw_body"
            },
            {
              "type": "return",
              "name": "m_fourcc"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "wave_color_scroll_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entry_bytes"
            },
            {
              "type": "uint32_t",
              "name": "m_len_entries"
            },
            {
              "type": "uint32_t",
              "name": "m__unnamed2"
            },
            {
              "type": "string",
              "name": "m_entries"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_len_entry_bytes"
            }
          ],
          "parent": "kaitai"
        }
      },
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "structure": {
          "type": "class",
          "name": "cue_tag_t",
          "members": [
            {
              "type": "tagged_section_t*",
              "name": "p__parent"
            },
            {
              "type": "cue_list_type_t",
              "name": "m_type"
            },
            {
              "type": "string",
              "name": "m__unnamed1"
            },
            {
              "type": "uint16_t",
              "name": "m_num_cues"
            },
            {
              "type": "uint32_t",
              "name": "m_memory_count"
            },
            {
              "type": "rekordbox_anlz_t*",
              "name": "m__root"
            },
            {
              "type": "tagged_section_t*",
              "name": "m__parent"
            },
            {
              "type": "return",
              "name": "m_type"
            }
          ],
          "parent": "kaitai"
        }
      }
    ],
    "tagged_sections": [
      {
        "file": "/home/fat32/dj-universe/mixxx/lib/rekordbox-metadata/rekordbox_anlz.h",
        "enum": {
          "name": "section_tags_t",
          "values": [
            {
              "name": "SECTION_TAGS_CUES_2",
              "value": "1346588466"
            },
            {
              "name": "SECTION_TAGS_CUES",
              "value": "1346588482"
            },
            {
              "name": "SECTION_TAGS_PATH",
              "value": "1347441736"
            },
            {
              "name": "SECTION_TAGS_BEAT_GRID",
              "value": "1347507290"
            },
            {
              "name": "SECTION_TAGS_SONG_STRUCTURE",
              "value": "1347638089"
            },
            {
              "name": "SECTION_TAGS_VBR",
              "value": "1347830354"
            },
            {
              "name": "SECTION_TAGS_WAVE_PREVIEW",
              "value": "1347895638"
            },
            {
              "name": "SECTION_TAGS_WAVE_TINY",
              "value": "1347900978"
            },
            {
              "name": "SECTION_TAGS_WAVE_SCROLL",
              "value": "1347900979"
            },
            {
              "name": "SECTION_TAGS_WAVE_COLOR_PREVIEW",
              "value": "1347900980"
            },
            {
              "name": "SECTION_TAGS_WAVE_COLOR_SCROLL",
              "value": "1347900981"
            }
          ]
        }
      }
    ],
    "data_encoding": [],
    "header_formats": [],
    "binary_layouts": []
  },
  "dj_universe_enhancements": {
    "beat_detection_enhancements": [
      {
        "feature": "Professional Beat Grid Analysis",
        "description": "Implement Rekordbox-style beat grid generation with precise tempo detection",
        "priority": "high",
        "implementation": "Integrate beat_grid_tag_t structure for accurate beat positioning",
        "impact": "Ultra-precise beat synchronization for DJ battles",
        "technical_details": {
          "structures": [
            "beat_grid_tag_t",
            "beat_grid_beat_t"
          ],
          "key_features": [
            "Beat number tracking",
            "Tempo calculation",
            "Time positioning"
          ]
        }
      }
    ],
    "waveform_visualization_upgrades": [
      {
        "feature": "Advanced Waveform Visualization",
        "description": "Multi-resolution color waveforms with preview and scroll capabilities",
        "priority": "high",
        "implementation": "Adopt wave_color_preview_tag_t and wave_scroll_tag_t structures",
        "impact": "Professional-grade waveform display for DJs",
        "technical_details": {
          "structures": [
            "color_row_t",
            "wave_preview_tag_t",
            "wave_color_preview_tag_t",
            "wave_scroll_tag_t",
            "wave_color_scroll_tag_t"
          ],
          "features": [
            "Color waveforms",
            "Preview generation",
            "Scroll optimization"
          ]
        }
      }
    ],
    "cue_point_system_improvements": [
      {
        "feature": "Advanced Cue Point Management",
        "description": "Hot cues, memory cues, loops with color coding and comments",
        "priority": "medium",
        "implementation": "Implement cue_extended_tag_t with full feature set",
        "impact": "Professional cue point system for battle preparation",
        "technical_details": {
          "structures": [
            "cue_extended_entry_t",
            "cue_entry_t",
            "cue_extended_tag_t",
            "cue_tag_t"
          ],
          "features": [
            "Hot cues",
            "Memory cues",
            "Loop points",
            "Color coding",
            "Comments"
          ]
        }
      }
    ],
    "song_analysis_features": [
      {
        "feature": "Intelligent Song Structure Analysis",
        "description": "Automatic phrase detection with mood and energy analysis",
        "priority": "medium",
        "implementation": "Integrate song_structure_tag_t for automatic analysis",
        "impact": "AI-powered track analysis for battle strategy",
        "technical_details": {
          "structures": [
            "phrase_mid_t",
            "song_structure_body_t",
            "phrase_high_t",
            "song_structure_tag_t",
            "song_structure_entry_t",
            "phrase_low_t"
          ],
          "features": [
            "Phrase detection",
            "Mood analysis",
            "Energy tracking",
            "Section identification"
          ]
        }
      }
    ],
    "metadata_processing_optimizations": [
      {
        "feature": "Optimized Metadata Processing",
        "description": "Fast parsing and caching of analysis data",
        "priority": "medium",
        "implementation": "Optimize tagged_section_t parsing with intelligent caching",
        "impact": "Instant track loading and analysis in battles",
        "technical_details": {
          "optimizations": [
            "Binary format parsing",
            "Memory mapping",
            "Lazy loading",
            "Analysis caching"
          ]
        }
      }
    ],
    "battle_mode_integrations": [
      {
        "feature": "Real-time Battle Analysis",
        "description": "Live track analysis during battles for scoring and feedback",
        "priority": "high",
        "implementation": "Combine all Rekordbox analysis features for real-time processing",
        "impact": "Advanced AI judging with detailed performance metrics",
        "technical_details": {
          "required_features": [
            "Beat grid analysis",
            "Phrase detection",
            "Tempo matching",
            "Key detection"
          ],
          "real_time_requirements": [
            "Low latency processing",
            "Continuous analysis",
            "Live scoring"
          ]
        }
      }
    ]
  }
}